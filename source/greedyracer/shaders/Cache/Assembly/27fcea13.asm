//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 g_mWorld;                 // Offset:    0 Size:    64
//
// }
//
// cbuffer cbPerCamera
// {
//
//   float4x4 g_mViewProj;              // Offset:    0 Size:    64
//
// }
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mView;                  // Offset:    0 Size:    64 [unused]
//   float4x4 g_mViewInv;               // Offset:   64 Size:    64
//   float4x4 g_mProjection;            // Offset:  128 Size:    64 [unused]
//   float4x4 g_mProjectionInv;         // Offset:  192 Size:    64 [unused]
//   float4x4 g_mProjectionInvViewport; // Offset:  256 Size:    64 [unused]
//   float4 g_f4AmbientColorUp;         // Offset:  320 Size:    16 [unused]
//   float4 g_f4AmbientColorDown;       // Offset:  336 Size:    16 [unused]
//   float3 g_f3CameraPos;              // Offset:  352 Size:    12 [unused]
//   float g_fAlphaTest;                // Offset:  364 Size:     4 [unused]
//   uint g_uNumLights;                 // Offset:  368 Size:     4 [unused]
//   uint g_uNumSpotLights;             // Offset:  372 Size:     4 [unused]
//   uint g_uWindowWidth;               // Offset:  376 Size:     4 [unused]
//   uint g_uWindowHeight;              // Offset:  380 Size:     4 [unused]
//   uint g_uMaxNumLightsPerTile;       // Offset:  384 Size:     4 [unused]
//   uint g_uMaxNumElementsPerTile;     // Offset:  388 Size:     4 [unused]
//   uint g_uNumTilesX;                 // Offset:  392 Size:     4 [unused]
//   uint g_uNumTilesY;                 // Offset:  396 Size:     4 [unused]
//   uint g_uMaxVPLs;                   // Offset:  400 Size:     4 [unused]
//   uint g_uMaxNumVPLsPerTile;         // Offset:  404 Size:     4 [unused]
//   uint g_uMaxNumVPLElementsPerTile;  // Offset:  408 Size:     4 [unused]
//   float g_fVPLSpotStrength;          // Offset:  412 Size:     4 [unused]
//   float g_fVPLSpotRadius;            // Offset:  416 Size:     4 [unused]
//   float g_fVPLPointStrength;         // Offset:  420 Size:     4 [unused]
//   float g_fVPLPointRadius;           // Offset:  424 Size:     4 [unused]
//   float g_fVPLRemoveBackFaceContrib; // Offset:  428 Size:     4 [unused]
//   float g_fVPLColorThreshold;        // Offset:  432 Size:     4 [unused]
//   float g_fVPLBrightnessThreshold;   // Offset:  436 Size:     4 [unused]
//   float g_fPerFramePad1;             // Offset:  440 Size:     4 [unused]
//   float g_fPerFramePad2;             // Offset:  444 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerObject                       cbuffer      NA          NA    0        1
// cbPerCamera                       cbuffer      NA          NA    1        1
// cbPerFrame                        cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// POSITION                 0   xyzw        0     NONE  float   xyzw
// NORMAL                   0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xy          2     NONE  float   xy  
// TANGENT                  0   xyz         3     NONE  float   xyz 
// BITANGENT                0   xyz         4     NONE  float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float   xyzw
// NORMAL                   0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xyz         2     NONE  float   xyz 
// TEXCOORD                 1   xy          3     NONE  float   xy  
// TANGENT                  0   xyz         4     NONE  float   xyz 
// BITANGENT                0   xyz         5     NONE  float       
// TEXCOORD                 2   xyz         6     NONE  float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xy
dcl_output o4.xyz
dcl_output o6.xyz
dcl_temps 6

#line 205 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
dp4 r0.x, v0.xyzw, cb0[0].xyzw  // f4WorldPos<0:NaN:Inf>
dp4 r0.y, v0.xyzw, cb0[1].xyzw  // f4WorldPos<1:NaN:Inf>
dp4 r0.z, v0.xyzw, cb0[2].xyzw  // f4WorldPos<2:NaN:Inf>
dp4 r0.w, v0.xyzw, cb0[3].xyzw  // f4WorldPos<3:NaN:Inf>
mov r1.x, r0.x  // f4WorldPos<0:NaN:Inf>
mov r1.y, r0.y  // f4WorldPos<1:NaN:Inf>
mov r1.z, r0.z  // f4WorldPos<2:NaN:Inf>
dp4 r2.x, r0.xyzw, cb1[0].xyzw  // output<0:NaN:Inf>
dp4 r2.y, r0.xyzw, cb1[1].xyzw  // output<1:NaN:Inf>
dp4 r2.z, r0.xyzw, cb1[2].xyzw  // output<2:NaN:Inf>
dp4 r2.w, r0.xyzw, cb1[3].xyzw  // output<3:NaN:Inf>
mov r1.xyz, r1.xyzx  // output<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
dp3 r0.x, v1.xyzx, cb0[0].xyzx  // output<4:NaN:Inf>
dp3 r0.y, v1.xyzx, cb0[1].xyzx  // output<5:NaN:Inf>
dp3 r0.z, v1.xyzx, cb0[2].xyzx  // output<6:NaN:Inf>
mov r3.xy, v2.xyxx  // output<10,11>
mov r4.xyz, v3.xyzx  // output<12,13,14>

#line 216
dp4 r5.x, l(0.000000, 0.000000, 0.000000, 1.000000), cb2[4].xyzw  // output<18>
dp4 r5.y, l(0.000000, 0.000000, 0.000000, 1.000000), cb2[5].xyzw  // output<19>
dp4 r5.z, l(0.000000, 0.000000, 0.000000, 1.000000), cb2[6].xyzw  // output<20>
mov o0.xyzw, r2.xyzw  // RenderBlendedVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov o1.xyz, r0.xyzx  // RenderBlendedVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
mov o2.xyz, r1.xyzx  // RenderBlendedVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
mov o4.xyz, r4.xyzx  // RenderBlendedVS<12,13,14>
mov o6.xyz, r5.xyzx  // RenderBlendedVS<18,19,20>
mov o3.xy, r3.xyxx  // RenderBlendedVS<10,11>
ret 
// Approximately 27 instruction slots used
