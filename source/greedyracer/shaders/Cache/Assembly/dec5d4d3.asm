//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer TexInfo
// {
//
//   float4 f4ColorAmbient;             // Offset:    0 Size:    16
//   float fA;                          // Offset:   16 Size:     4
//   float fH;                          // Offset:   20 Size:     4
//   float fBumpStrength;               // Offset:   24 Size:     4
//   float frTransparency;              // Offset:   28 Size:     4
//   float4 f4ColorSSS;                 // Offset:   32 Size:    16
//   float4 f4SSSBRDFParams;            // Offset:   48 Size:    16
//   uint uImage;                       // Offset:   64 Size:     4
//   uint uGlow;                        // Offset:   68 Size:     4
//   uint uSpecular;                    // Offset:   72 Size:     4
//   uint uBump;                        // Offset:   76 Size:     4
//   uint uImageBlack;                  // Offset:   80 Size:     4
//   uint uGlowAsImage;                 // Offset:   84 Size:     4
//   uint uSpecularAsImage;             // Offset:   88 Size:     4
//   uint uHeightAsImage;               // Offset:   92 Size:     4 [unused]
//   uint uImageWhite;                  // Offset:   96 Size:     4 [unused]
//   uint uGlowWhite;                   // Offset:  100 Size:     4 [unused]
//   uint uSpecularWhite;               // Offset:  104 Size:     4
//   uint uHeight;                      // Offset:  108 Size:     4 [unused]
//   uint uShadingOn;                   // Offset:  112 Size:     4
//   uint uGlowAsAmbient;               // Offset:  116 Size:     4
//   uint uChromaKeying;                // Offset:  120 Size:     4
//   uint uEnvironment;                 // Offset:  124 Size:     4
//   uint uPOM;                         // Offset:  128 Size:     4
//   uint uTexBRDF;                     // Offset:  132 Size:     4
//   uint uTexSSS;                      // Offset:  136 Size:     4
//   uint uReflectionMap;               // Offset:  140 Size:     4
//   uint uixPos;                       // Offset:  144 Size:     4
//   uint uiyPos;                       // Offset:  148 Size:     4
//   uint uixPics;                      // Offset:  152 Size:     4
//   uint uiyPics;                      // Offset:  156 Size:     4
//
// }
//
// cbuffer ViewportArt
// {
//
//   float4 f4ColorViewportOutline;     // Offset:    0 Size:    16
//   float4 f4FogParams;                // Offset:   16 Size:    16
//   float4x4 mColorModification;       // Offset:   32 Size:    64
//   uint uStyleColor;                  // Offset:   96 Size:     4
//   uint uStyleHalfTransparent;        // Offset:  100 Size:     4
//   uint uStylePopart;                 // Offset:  104 Size:     4 [unused]
//   uint uStyleOutlining;              // Offset:  108 Size:     4
//   uint uStyleMonochrome;             // Offset:  112 Size:     4 [unused]
//   uint uStyleOwn;                    // Offset:  116 Size:     4 [unused]
//   uint uStyleFog;                    // Offset:  120 Size:     4
//   uint uPad0;                        // Offset:  124 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSampler                     sampler      NA          NA    0        1
// shadowSampler                   sampler_c      NA          NA    2        1
// shadowMap                         texture  float4          2d   11        1
// tex2D[0]                          texture  float4          2d   15        1
// tex2D[1]                          texture  float4          2d   16        1
// tex2D[2]                          texture  float4          2d   17        1
// tex2D[3]                          texture  float4          2d   18        1
// tex2D[4]                          texture  float4          2d   19        1
// tex2D[5]                          texture  float4          2d   20        1
// tex2D[6]                          texture  float4          2d   21        1
// TexInfo                           cbuffer      NA          NA    1        1
// ViewportArt                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float      w
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float      w
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     zw
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float      w
// TEXCOORD                 2   xyzw        6     NONE  float   xyzw
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyz 
// LIGHTS                   3   xyzw        9     NONE  float   xyzw
// LIGHTS                   6   xyzw       10     NONE   uint   xyz 
// LIGHTS                  10   xyzw       11     NONE   uint   xyzw
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float   xyzw
// LIGHTS                  14   xyzw       14     NONE  float   xyz 
// LIGHTS                  15   xyzw       15     NONE  float   xyzw
// LIGHTS                  21   xyzw       16     NONE   uint    yzw
// LIGHTS                  23   xyzw       17     NONE  float   xyzw
// LIGHTS                  24   xyzw       18     NONE  float   xyzw
// LIGHTS                  26   xyzw       19     NONE  float   xyz 
// LIGHTS                  27   xyz        20     NONE  float   xyz 
// LIGHTS                  32   xyzw       21     NONE   uint   x zw
// LIGHTS                  35   xyzw       22     NONE  float   xyzw
// LIGHTS                  36   xyzw       23     NONE  float   xyzw
// LIGHTS                  38   xyzw       24     NONE  float   xyz 
// LIGHTS                  39   xyz        25     NONE  float   xyz 
// LIGHTS                  43   xyzw       26     NONE   uint   xy w
// LIGHTS                  47   xyzw       27     NONE  float   xyzw
// COUNT                    0   x          28     NONE   uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[10], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.xy
dcl_input_ps linear v4.zw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_input_ps constant v10.xyz
dcl_input_ps constant v11.xyzw
dcl_input_ps linear v12.xyzw
dcl_input_ps linear v13.xyzw
dcl_input_ps linear v14.xyz
dcl_input_ps linear v15.xyzw
dcl_input_ps constant v16.yzw
dcl_input_ps linear v17.xyzw
dcl_input_ps linear v18.xyzw
dcl_input_ps linear v19.xyz
dcl_input_ps linear v20.xyz
dcl_input_ps constant v21.xzw
dcl_input_ps linear v22.xyzw
dcl_input_ps linear v23.xyzw
dcl_input_ps linear v24.xyz
dcl_input_ps linear v25.xyz
dcl_input_ps constant v26.xyw
dcl_input_ps linear v27.xyzw
dcl_input_ps constant v28.x
dcl_output o0.xyzw
dcl_temps 20

#line 296 "\\?\C:\Users\Peter\Documents\Hochschule_Kempten\Softwarepraktikum\greedyracer\source\greedyracer\Shaders\Source\shaders.hlsl"
ult r0.x, l(1), cb1[9].y
ult r0.y, l(1), cb1[9].w
or r0.x, r0.y, r0.x
if_nz r0.x

#line 300
  utof r0.x, cb1[9].x  // fxPic<0:[0f,4.29497e+009f]>
  utof r0.y, cb1[9].y  // fyPic<0:[0f,4.29497e+009f]>
  utof r0.z, cb1[9].z  // fxPics<0:[0f,4.29497e+009f]>
  utof r0.w, cb1[9].w  // fyPics<0:[0f,4.29497e+009f]>
  div r0.x, r0.x, r0.z
  div r0.z, l(1.000000), r0.z
  mul r0.z, r0.z, v4.x
  add r1.x, r0.z, r0.x  // input<13:NaN:Inf>
  div r0.x, r0.y, r0.w
  div r0.y, l(1.000000), r0.w
  mul r0.y, r0.y, v4.y
  add r1.y, r0.y, r0.x  // input<14:NaN:Inf>

#line 296
else 
  mov r1.xy, v4.xyxx  // input<13,14>
endif 

#line 308
mov r0.xy, r1.xyxx  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
ieq r0.z, cb1[8].x, l(1)
if_nz r0.z
  mov r2.xyz, -v6.xyzx
  add r2.xyz, r2.xyzx, v5.xyzx
  dp3 r0.z, r2.xyzx, r2.xyzx
  rsq r0.z, r0.z
  mul r2.xyz, r0.zzzz, r2.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r2.xyz, -r2.xyzx  // f3ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  dp3 r0.z, v1.xyzx, v1.xyzx
  rsq r0.z, r0.z
  mul r3.xyz, r0.zzzz, v1.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r4.xyz, r3.zxyz  // f3N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  mov r5.xyz, v2.xyzx  // f3T<0,1,2>
  mul r6.xyz, r4.zxyz, r5.zxyz
  mul r4.xyz, r4.xyzx, r5.yzxy
  mov r4.xyz, -r4.xyzx
  add r4.xyz, r4.xyzx, r6.xyzx
  mov r4.xyz, -r4.xyzx  // f3B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 320
  dp3 r6.x, r2.xyzx, v2.xyzx  // f3ViewDirTS<0:NaN:Inf>
  dp3 r6.y, r2.xyzx, r4.xyzx  // f3ViewDirTS<1:NaN:Inf>
  dp3 r0.z, r2.xyzx, r3.xyzx  // f3ViewDirTS<2:NaN:Inf>
  mov r3.xy, -r6.xyxx
  mul r3.xy, r3.xyxx, l(0.020000, 0.020000, 0.000000, 0.000000)
  div r0.zw, r3.xxxy, r0.zzzz  // f2MaxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
  dp3 r1.w, r2.xyzx, v1.xyzx
  mul r1.w, r1.w, l(-15.000000)
  add r1.w, r1.w, l(20.000000)
  ftoi r1.w, r1.w  // iSampleCount<0>
  itof r2.x, r1.w
  div r2.x, l(1.000000), r2.x  // fZStep<0:Inf>
  mul r0.zw, r0.zzzw, r2.xxxx  // f2TexStep<0:NaN:Inf,1:NaN:Inf>
  deriv_rtx_coarse r2.yz, r0.xxyx  // f2Dx<0:NaN:Inf,1:NaN:Inf>
  deriv_rty_coarse r3.xy, r0.xyxx  // f2Dy<0:NaN:Inf,1:NaN:Inf>

#line 332
  mov r2.w, l(0)  // iSampleIdx<0: 0>
  mov r3.zw, l(0,0,0,0)  // f2CurTexOffset<0: -0f,1: -0f>

#line 336
  mov r2.x, -r2.x
  add r4.w, r2.x, l(1.000000)  // fCurRayZ<0:Inf>
  mov r5.w, l(1.000000)  // fPrevRayZ<0: 1f>

#line 344
  mov r6.xy, r3.zwzz  // f2CurTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r6.zw, r3.zzzw  // f2PrevTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r7.xy, r3.zwzz  // f2FinalTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r7.z, r2.w  // iSampleIdx<0>
  mov r7.w, r4.w  // fCurRayZ<0:NaN:Inf>
  mov r8.x, r5.w  // fPrevRayZ<0:NaN:Inf>
  mov r8.y, r2.w  // fPrevHeight<0:NaN:Inf>
  loop 
    iadd r8.z, r1.w, l(1)
    ilt r8.w, r7.z, r8.z
    breakc_z r8.w
    add r9.xy, r0.xyxx, r6.xyxx
    sample_d_indexable(texture2d)(float,float,float,float) r8.w, r9.xyxx, t20.yzwx, s0, r2.yzyy, r3.xyxx
    mov r8.w, r8.w  // fCurHeight<0:Inf>
    add r8.w, r8.w, r8.y
    mul r8.w, r8.w, l(0.500000)  // fCurHeight<0:NaN:Inf>
    lt r9.x, r7.w, r8.w
    if_nz r9.x
      mov r9.x, -r8.x
      add r9.y, r8.y, r9.x
      mov r9.z, -r8.w
      add r9.z, r8.y, r9.z
      add r9.z, r7.w, r9.z
      add r9.x, r9.x, r9.z
      div r9.x, r9.y, r9.x  // fT<0:NaN:Inf>
      mul r9.xy, r0.zwzz, r9.xxxx
      add r7.xy, r6.zwzz, r9.xyxx  // f2FinalTexOffset<0:NaN:Inf,1:NaN:Inf>
      mov r7.z, r8.z  // iSampleIdx<0>
    else 

#line 357
      iadd r7.z, r7.z, l(1)  // iSampleIdx<0>
      mov r6.zw, r6.xxxy  // f2PrevTexOffset<0:NaN:Inf,1:NaN:Inf>
      mov r8.x, r7.w  // fPrevRayZ<0:NaN:Inf>
      mov r8.y, r8.w  // fPrevHeight<0:NaN:Inf>
      add r6.xy, r0.zwzz, r6.xyxx  // f2CurTexOffset<0:NaN:Inf,1:NaN:Inf>
      add r7.w, r2.x, r7.w  // fCurRayZ<0:NaN:Inf>

#line 348
    endif 

#line 344
  endloop 

#line 366
  add r0.zw, r0.xxxy, r7.xxxy  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
  sample_indexable(texture2d)(float,float,float,float) r1.w, r0.zwzz, t20.xzwy, s0  // fHeightX<0:Inf>

#line 371
  mul r2.xyz, r5.xyzx, r1.wwww
  mul r3.xyz, r4.xyzx, r1.wwww
  add r2.xyz, r2.xyzx, r3.xyzx
  add r2.xyz, r2.xyzx, v1.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, r2.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 310
else 
  mov r2.xyz, v1.xyzx  // input<4,5,6>
  mov r0.zw, r0.xxxy  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
endif 

#line 375
ieq r1.w, cb1[8].x, l(2)
if_nz r1.w

#line 380
  mov r3.xyz, -v6.xyzx
  add r3.xyz, r3.xyzx, v5.xyzx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r3.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r3.xyz, -r3.xyzx  // f3ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, r2.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r5.xyz, r4.zxyz  // f3N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  mov r6.xyz, v2.xyzx  // f3T<0,1,2>
  mul r7.xyz, r5.zxyz, r6.zxyz
  mul r5.xyz, r5.xyzx, r6.yzxy
  mov r5.xyz, -r5.xyzx
  add r5.xyz, r5.xyzx, r7.xyzx
  mov r5.xyz, -r5.xyzx  // f3B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 388
  dp3 r7.x, r3.xyzx, v2.xyzx  // f3ViewDirTS<0:NaN:Inf>
  dp3 r7.y, r3.xyzx, r5.xyzx  // f3ViewDirTS<1:NaN:Inf>
  dp3 r7.z, r3.xyzx, r4.xyzx  // f3ViewDirTS<2:NaN:Inf>
  dp3 r1.w, r7.xyzx, r7.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r7.xyzx  // f3RayDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  div r3.xyz, r3.xyzx, r3.zzzz  // f3RayDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 395
  mov r4.xy, r0.xyxx  // f3Pos<0:NaN:Inf,1:NaN:Inf>
  mov r4.z, l(0)  // f3Pos<2: 0f>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  add r1.w, r7.y, l(-0.000000)
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.xyxx, t20.zwxy, s0
  mov r7.xy, r7.xyxx  // f4Tex<2:Inf,3:Inf>
  mov r7.x, r7.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r7.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r7.x
  add r2.w, r7.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r7.xyz, r1.wwww, r3.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx  // f3Pos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 400
  sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t20.zwxy, s0  // f4Tex<2:Inf,3:Inf,0:Inf,1:Inf>
  mov r4.x, r4.x  // fConeRatio<0:Inf>
  mov r1.w, -r4.z
  add r1.w, r1.w, r4.y
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fHeight<0:[0f,1f]>
  mul r1.w, r1.w, r4.x
  add r2.w, r4.x, l(1.000000)
  div r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.010000)  // fD<0:NaN:Inf>
  mul r1.w, r1.w, r3.z
  add r1.w, r1.w, r4.z  // f3Pos<2:NaN:Inf>

#line 407
  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r3.xyz, r1.wwww, r3.xyzx  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r1.z, l(0)
  add r1.xyz, r1.xyzx, r3.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 412
  sample_indexable(texture2d)(float,float,float,float) r1.w, r1.xyxx, t20.xyzw, s0
  mov r1.w, r1.w  // f4Tex<3:Inf>
  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  lt r1.w, r1.z, r1.w
  if_nz r1.w
    add r4.xyz, r1.xyzx, r3.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 

#line 418
    mov r7.xyz, -r3.xyzx
    add r4.xyz, r1.xyzx, r7.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 415
  endif 

#line 412
  sample_indexable(texture2d)(float,float,float,float) r1.x, r4.xyxx, t20.wxyz, s0
  mov r1.x, r1.x  // f4Tex<3:Inf>
  mul r1.yzw, r3.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  lt r1.x, r4.z, r1.x
  if_nz r1.x
    add r3.xyz, r1.yzwy, r4.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 

#line 418
    mov r7.xyz, -r1.yzwy
    add r3.xyz, r4.xyzx, r7.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 415
  endif 

#line 412
  sample_indexable(texture2d)(float,float,float,float) r1.x, r3.xyxx, t20.wxyz, s0
  mov r1.x, r1.x  // f4Tex<3:Inf>
  mul r1.yzw, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  lt r1.x, r3.z, r1.x
  if_nz r1.x
    add r4.xyz, r1.yzwy, r3.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 

#line 418
    mov r7.xyz, -r1.yzwy
    add r4.xyz, r3.xyzx, r7.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 415
  endif 

#line 412
  sample_indexable(texture2d)(float,float,float,float) r1.x, r4.xyxx, t20.wxyz, s0
  mov r1.x, r1.x  // f4Tex<3:Inf>
  mul r1.yzw, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  lt r1.x, r4.z, r1.x
  if_nz r1.x
    add r3.xyz, r1.yzwy, r4.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 

#line 418
    mov r7.xyz, -r1.yzwy
    add r3.xyz, r4.xyzx, r7.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 415
  endif 

#line 412
  sample_indexable(texture2d)(float,float,float,float) r1.x, r3.xyxx, t20.wxyz, s0
  mov r1.x, r1.x  // f4Tex<3:Inf>
  mul r1.yzw, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  lt r1.x, r3.z, r1.x
  if_nz r1.x
    add r4.xyz, r1.yzwy, r3.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 

#line 418
    mov r7.xyz, -r1.yzwy
    add r4.xyz, r3.xyzx, r7.xyzx  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 415
  endif 

#line 412
  sample_indexable(texture2d)(float,float,float,float) r1.x, r4.xyxx, t20.wxyz, s0  // f4Tex<3:Inf,0:Inf,1:Inf,2:Inf>
  mul r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)  // f3BinSearchRange<0:NaN:Inf,1:NaN:Inf>
  lt r1.x, r4.z, r1.x
  if_nz r1.x
    add r0.zw, r1.yyyz, r4.xxxy  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf>
  else 

#line 418
    mov r1.xy, -r1.yzyy
    add r0.zw, r1.xxxy, r4.xxxy  // f3BinSearchPosition<0:NaN:Inf,1:NaN:Inf>

#line 415
  endif 

#line 421
  mov r0.zw, r0.zzzw  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
  sample_indexable(texture2d)(float,float,float,float) r1.x, r0.zwzz, t20.wxyz, s0  // fHeightX<0:Inf>

#line 426
  mul r1.yzw, r6.xxyz, r1.xxxx
  mul r3.xyz, r5.xyzx, r1.xxxx
  add r1.xyz, r1.yzwy, r3.xyzx
  add r1.xyz, r1.xyzx, r2.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r1.w, r1.xyzx, r1.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, r1.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 375
endif 

#line 430
ine r1.x, l(0, 0, 0, 0), cb1[4].w
if_nz r1.x
  sample_indexable(texture2d)(float,float,float,float) r1.yz, r0.zwzz, t18.zxyw, s0
  mul r1.yz, r1.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000)
  add r1.yz, r1.yyzy, l(0.000000, -1.000000, -1.000000, 0.000000)  // f3BumpNormal<0:Inf,1:Inf>
  mul r1.yz, r1.yyzy, cb1[1].zzzz  // f3BumpNormal<0:NaN:Inf,1:NaN:Inf>
  mul r3.xyz, r1.yyyy, v2.xyzx
  mul r1.yzw, r1.zzzz, v3.xxyz
  add r1.yzw, r1.yyzw, r3.xxyz
  add r1.yzw, r1.yyzw, r2.xxyz  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r2.w, r1.yzwy, r1.yzwy
  rsq r2.w, r2.w
  mul r2.xyz, r1.yzwy, r2.wwww  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 430
endif 

#line 445
resinfo_indexable(texture2d)(float,float,float,float) r1.yz, l(0), t11.zxyw  // fWidth<0:Inf>, fHeight<0:Inf>

#line 448
if_nz v28.x
  mov r3.xyz, v7.yzwy  // alLight<1,2,3>
  mov r4.xyz, v8.xyzx  // alLight<4,5,6>
  mov r5.xyz, v9.xyzx  // alLight<8,9,10>
  mov r6.xyz, v12.xyzx  // alLight<18,19,20>
  mov r1.w, v7.x  // alLight<0>
  mov r2.w, v4.z  // alLight<11>
  mov r3.w, v1.w  // alLight<12>
  mov r4.w, v11.x  // alLight<17>
  mov r5.w, v12.w  // alLight<21>

#line 456
  ieq r4.w, r4.w, l(3)
  if_nz r4.w
    dp3 r4.w, r3.xyzx, r3.xyzx
    rsq r4.w, r4.w
    mul r7.xyz, r3.xyzx, r4.wwww
    dp3 r4.w, r5.xyzx, r5.xyzx
    rsq r4.w, r4.w
    mul r5.xyz, r4.wwww, r5.xyzx
    dp3 r4.w, r7.xyzx, r5.xyzx  // fCosCurAngle<0:NaN:Inf>
    lt r5.x, r4.w, r2.w
    if_nz r5.x
      lt r5.x, r3.w, r4.w
      not r5.y, r5.x
      if_nz r5.x
        mov r3.w, -r3.w
        add r4.w, r3.w, r4.w
        add r2.w, r2.w, r3.w
        div r2.w, r4.w, r2.w  // fFallOff<0:NaN:Inf>
      else 

#line 467
        mov r2.w, l(1.000000)  // fFallOff<0: 1f>

#line 461
      endif 
    else 
      mov r2.w, l(1.000000)  // fFallOff<0: 1f>
      mov r5.y, l(0)
    endif 

#line 471
    if_z r5.y
      if_nz v10.x

#line 474
        div r5.xzw, r6.xxyz, r5.wwww  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 479
        lt r3.w, r5.x, l(-1.000000)
        lt r4.w, l(1.000000), r5.x
        or r3.w, r3.w, r4.w
        lt r4.w, r5.z, l(-1.000000)
        or r3.w, r3.w, r4.w
        lt r4.w, l(1.000000), r5.z
        or r3.w, r3.w, r4.w
        lt r4.w, r5.w, l(0.000000)
        or r3.w, r3.w, r4.w
        lt r4.w, l(3.000000), r5.w
        or r3.w, r3.w, r4.w

#line 484
        not r4.w, r3.w
        not r4.w, r4.w
        if_z r3.w
          mov r7.xy, -r0.xyxx
          add r7.xy, r0.zwzz, r7.xyxx  // Offset<0:NaN:Inf,1:NaN:Inf>
          mul r6.w, r7.x, l(0.200000)
          mov r6.w, -r6.w
          add r5.x, r5.x, r6.w  // alLight<18:NaN:Inf>
          mul r6.w, r7.y, l(0.200000)
          mov r6.w, -r6.w
          add r5.z, r5.z, r6.w  // alLight<19:NaN:Inf>

#line 489
          mul r5.x, r5.x, l(0.500000)
          add r7.x, r5.x, l(0.500000)  // alLight<18:NaN:Inf>
          mul r5.x, r5.z, l(-0.500000)
          add r7.y, r5.x, l(0.500000)  // alLight<19:NaN:Inf>
          if_nz v10.y

#line 504
            nop 
            mov r5.x, r1.y  // fWidth<0:Inf>
            mov r5.z, r1.z  // fHeight<0:Inf>
            mov r7.zw, r0.zzzw  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 253
            nop 
            mov r7.zw, r7.zzzw  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 247
            dp2 r6.w, r7.zwzz, l(23.140692, 2.665144, 0.000000, 0.000000)
            mul r6.w, r6.w, l(256.000000)
            add r6.w, r6.w, l(0.000000)
            div r7.z, l(123456792.000000), r6.w
            mov r7.w, -r7.z
            max r8.x, r7.w, r7.z
            ge r7.z, r7.z, r7.w
            frc r7.w, r8.x
            mov r8.x, -r7.w
            movc r7.z, r7.z, r7.w, r8.x
            mul r6.w, r6.w, r7.z
            sincos null, r6.w, r6.w
            frc r6.w, r6.w  // RandomGelfond<0:NaN>

#line 253
            mov r6.w, r6.w  // frand<0:NaN>
            add r6.w, r6.w, l(0.500000)
            mul r5.x, r5.x, r6.w
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mul r5.z, r5.z, r6.w
            div r8.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.zwzz, t11.xxxx, s2, r5.w
            mul r6.w, r6.w, l(0.800000)
            add r6.w, r6.w, l(0.000000)  // fsum<0:NaN>
            nop 

#line 253
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            div r8.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 

#line 504
            add r7.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 

#line 504
            add r6.w, r7.z, r6.w  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 504
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r6.w, r6.w, r7.w  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 504
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r6.w, r6.w, r7.w  // fsum<0:NaN>
            nop 

#line 253
            nop 

#line 504
            add r6.w, r7.z, r6.w  // fsum<0:NaN>
            nop 

#line 253
            nop 

#line 504
            add r6.w, r7.z, r6.w  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            div r8.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>
            nop 

#line 253
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            div r8.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 504
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r6.w, r6.w, r7.z  // fsum<0:NaN>

#line 508
            if_nz v10.z

#line 511
              mov r7.z, -r5.w
              max r7.z, r5.w, r7.z
              mul r7.z, r7.z, l(0.100000)
              add r8.x, r7.z, r7.x  // alLight<18:NaN:Inf>
              add r8.y, r7.z, r7.y  // alLight<19:NaN:Inf>

#line 521
              nop 

#line 253
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r7.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
              mul r7.z, r7.z, l(0.200000)
              add r7.z, r6.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(-1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 521
              add r8.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 521
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.z, r7.z, r8.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.z, r7.z, r8.z  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 521
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 521
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.z, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(1.000000), r5.z  // TexOffset2<1:NaN:Inf>

#line 521
              add r5.xz, r8.xxyx, r9.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xzxx, t11.xxxx, s2, r5.w
              mul r5.x, r5.x, l(0.200000)
              add r6.w, r5.x, r7.z  // fsum<0:NaN>

#line 508
            endif 

#line 528
            div r5.x, r6.w, l(16.000000)  // shadowFactor<0:NaN>

#line 492
          else 

#line 532
            sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.xyxx, t11.xxxx, s2, r5.w
            div r5.x, r5.z, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 492
          endif 

#line 484
        else 
          mov r5.x, l(1.000000)  // shadowFactor<0: 1f>
        endif 
        or r3.w, r3.w, r4.w

#line 471
      else 

#line 537
        sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t11.xxxx, s2, r6.z
        div r5.x, r4.w, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
        mov r3.w, l(0)

#line 471
      endif 
    else 
      mov r5.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r3.w, l(-1)
    endif 
    or r3.w, r5.y, r3.w

#line 456
  else 
    mov r2.w, l(1.000000)  // fFallOff<0: 1f>
    mov r5.x, l(1.000000)  // shadowFactor<0: 1f>
    mov r3.w, l(0)
  endif 

#line 541
  if_z r3.w
    dp3 r3.w, r2.xyzx, r2.xyzx
    rsq r3.w, r3.w
    mul r5.yzw, r2.xxyz, r3.wwww
    dp3 r3.x, r3.xyzx, r5.yzwy
    max r3.x, r3.x, l(0.000000)
    min r3.x, r3.x, l(1.000000)
    mul r1.w, r1.w, r3.x
    mul r3.xyz, r4.xyzx, r1.wwww
    mul r3.xyz, r2.wwww, r3.xyzx
    mul r3.xyz, r5.xxxx, r3.xyzx
    add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 
    mov r3.xyz, l(0,0,0,0)  // f4Diffuse<0: 0f,1: 0f,2: 0f>
  endif 

#line 448
  mov r1.w, l(0)
else 
  mov r3.xyz, l(0,0,0,0)  // f4Diffuse<0: 0f,1: 0f,2: 0f>
  mov r1.w, l(-1)
endif 
not r2.w, r1.w
and r2.w, r2.w, l(-1)
ult r3.w, l(1), v28.x
and r4.x, r2.w, r3.w
if_nz r4.x
  mov r4.xyz, v13.yzwy  // alLight<1,2,3>
  mov r5.xyz, v14.xyzx  // alLight<4,5,6>
  mov r6.xyz, v15.xyzx  // alLight<8,9,10>
  mov r7.xyz, v17.xyzx  // alLight<18,19,20>
  mov r4.w, v13.x  // alLight<0>
  mov r5.w, v2.w  // alLight<11>
  mov r6.w, v3.w  // alLight<12>
  mov r7.w, v16.y  // alLight<17>
  mov r8.x, v17.w  // alLight<21>

#line 453
  if_nz r2.w

#line 456
    ieq r7.w, r7.w, l(3)
    if_nz r7.w
      dp3 r7.w, r4.xyzx, r4.xyzx
      rsq r7.w, r7.w
      mul r8.yzw, r4.xxyz, r7.wwww
      dp3 r7.w, r6.xyzx, r6.xyzx
      rsq r7.w, r7.w
      mul r6.xyz, r6.xyzx, r7.wwww
      dp3 r6.x, r8.yzwy, r6.xyzx  // fCosCurAngle<0:NaN:Inf>
      lt r6.y, r6.x, r5.w
      if_nz r6.y
        lt r6.y, r6.w, r6.x
        not r6.z, r6.y
        if_nz r6.y
          mov r6.y, -r6.w
          add r6.x, r6.y, r6.x
          add r5.w, r5.w, r6.y
          div r5.w, r6.x, r5.w  // fFallOff<0:NaN:Inf>
        else 

#line 467
          mov r5.w, l(1.000000)  // fFallOff<0: 1f>

#line 461
        endif 
      else 
        mov r5.w, l(1.000000)  // fFallOff<0: 1f>
        mov r6.z, l(0)
      endif 

#line 471
      if_z r6.z
        if_nz v11.y

#line 474
          div r6.xyw, r7.xyxz, r8.xxxx  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 479
          lt r7.w, r6.x, l(-1.000000)
          lt r8.x, l(1.000000), r6.x
          or r7.w, r7.w, r8.x
          lt r8.x, r6.y, l(-1.000000)
          or r7.w, r7.w, r8.x
          lt r8.x, l(1.000000), r6.y
          or r7.w, r7.w, r8.x
          lt r8.x, r6.w, l(0.000000)
          or r7.w, r7.w, r8.x
          lt r8.x, l(3.000000), r6.w
          or r7.w, r7.w, r8.x

#line 484
          not r8.x, r7.w
          not r8.x, r8.x
          if_z r7.w
            mov r8.yz, -r0.xxyx
            add r8.yz, r0.zzwz, r8.yyzy  // Offset<0:NaN:Inf,1:NaN:Inf>
            mul r8.y, r8.y, l(0.200000)
            mov r8.y, -r8.y
            add r6.x, r6.x, r8.y  // alLight<18:NaN:Inf>
            mul r8.y, r8.z, l(0.200000)
            mov r8.y, -r8.y
            add r6.y, r6.y, r8.y  // alLight<19:NaN:Inf>

#line 489
            mul r6.x, r6.x, l(0.500000)
            add r9.x, r6.x, l(0.500000)  // alLight<18:NaN:Inf>
            mul r6.x, r6.y, l(-0.500000)
            add r9.y, r6.x, l(0.500000)  // alLight<19:NaN:Inf>
            if_nz v11.z

#line 504
              nop 
              mov r6.x, r1.y  // fWidth<0:Inf>
              mov r6.y, r1.z  // fHeight<0:Inf>
              mov r8.yz, r0.zzwz  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 253
              nop 
              mov r8.yz, r8.yyzy  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 247
              dp2 r8.y, r8.yzyy, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r8.y, r8.y, l(256.000000)
              add r8.y, r8.y, l(0.000000)
              div r8.z, l(123456792.000000), r8.y
              mov r8.w, -r8.z
              max r9.z, r8.w, r8.z
              ge r8.z, r8.z, r8.w
              frc r8.w, r9.z
              mov r9.z, -r8.w
              movc r8.z, r8.z, r8.w, r9.z
              mul r8.y, r8.y, r8.z
              sincos null, r8.y, r8.y
              frc r8.y, r8.y  // RandomGelfond<0:NaN>

#line 253
              mov r8.y, r8.y  // frand<0:NaN>
              add r8.y, r8.y, l(0.500000)
              mul r6.x, r6.x, r8.y
              div r10.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              mul r6.y, r6.y, r8.y
              div r10.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.yz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.y, r8.yzyy, t11.xxxx, s2, r6.w
              mul r8.y, r8.y, l(0.800000)
              add r8.y, r8.y, l(0.000000)  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 504
              add r8.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
              mul r8.z, r8.z, l(0.800000)
              add r8.y, r8.z, r8.y  // fsum<0:NaN>

#line 508
              if_nz v11.w

#line 511
                mov r8.z, -r6.w
                max r8.z, r6.w, r8.z
                mul r8.z, r8.z, l(0.100000)
                add r10.x, r8.z, r9.x  // alLight<18:NaN:Inf>
                add r10.y, r8.z, r9.y  // alLight<19:NaN:Inf>

#line 521
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r8.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r6.w
                mul r8.z, r8.z, l(0.200000)
                add r8.z, r8.z, r8.y  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r9.zw, r10.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r6.w
                mul r9.z, r9.z, l(0.200000)
                add r8.z, r8.z, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r6.w
                mul r9.z, r9.z, l(0.200000)
                add r8.z, r8.z, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r6.w
                mul r8.w, r8.w, l(0.200000)
                add r8.z, r8.w, r8.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r6.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r6.y  // TexOffset2<1:NaN:Inf>

#line 521
                add r6.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t11.xxxx, s2, r6.w
                mul r6.x, r6.x, l(0.200000)
                add r8.y, r6.x, r8.z  // fsum<0:NaN>

#line 508
              endif 

#line 528
              div r6.x, r8.y, l(16.000000)  // shadowFactor<0:NaN>

#line 492
            else 

#line 532
              sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r9.xyxx, t11.xxxx, s2, r6.w
              div r6.x, r6.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 492
            endif 

#line 484
          else 
            mov r6.x, l(1.000000)  // shadowFactor<0: 1f>
          endif 
          or r6.y, r7.w, r8.x

#line 471
        else 

#line 537
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r7.z
          div r6.x, r6.w, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
          mov r6.y, l(0)

#line 471
        endif 
      else 
        mov r6.x, l(1.000000)  // shadowFactor<0: 1f>
        mov r6.y, l(-1)
      endif 
      or r6.y, r6.z, r6.y

#line 456
    else 
      mov r5.w, l(1.000000)  // fFallOff<0: 1f>
      mov r6.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r6.y, l(0)
    endif 

#line 541
    if_z r6.y
      dp3 r6.y, r2.xyzx, r2.xyzx
      rsq r6.y, r6.y
      mul r6.yzw, r2.xxyz, r6.yyyy
      dp3 r4.x, r4.xyzx, r6.yzwy
      max r4.x, r4.x, l(0.000000)
      min r4.x, r4.x, l(1.000000)
      mul r4.x, r4.w, r4.x
      mul r4.xyz, r5.xyzx, r4.xxxx
      mul r4.xyz, r5.wwww, r4.xyzx
      mul r4.xyz, r6.xxxx, r4.xyzx
      add r3.xyz, r3.xyzx, r4.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 453
    mov r4.x, l(0)
    mov r4.y, l(0)
  else 
    mov r4.x, l(-1)
    mov r4.y, l(-1)
  endif 
  and r4.y, r2.w, r4.y
  or r1.w, r1.w, r4.y
  and r2.w, r2.w, r4.x
  iadd r2.w, r2.w, l(0)

#line 448
else 
  mov r2.w, l(0)
  mov r1.w, l(-1)
endif 
not r4.x, r1.w
not r4.y, r2.w
and r4.y, r4.y, r4.x
ult r4.z, l(2), v28.x
and r4.y, r4.y, r4.z
if_nz r4.y
  mov r5.xyz, v18.yzwy  // alLight<1,2,3>
  mov r6.xyz, v19.xyzx  // alLight<4,5,6>
  mov r7.xyz, v20.xyzx  // alLight<8,9,10>
  mov r8.xyz, v22.xyzx  // alLight<18,19,20>
  mov r4.y, v18.x  // alLight<0>
  mov r4.w, v4.w  // alLight<11>
  mov r5.w, v5.w  // alLight<12>
  mov r6.w, v21.z  // alLight<17>
  mov r7.w, v22.w  // alLight<21>

#line 453
  not r8.w, r2.w
  and r4.x, r4.x, r8.w
  if_nz r4.x

#line 456
    ieq r6.w, r6.w, l(3)
    if_nz r6.w
      dp3 r6.w, r5.xyzx, r5.xyzx
      rsq r6.w, r6.w
      mul r9.xyz, r5.xyzx, r6.wwww
      dp3 r6.w, r7.xyzx, r7.xyzx
      rsq r6.w, r6.w
      mul r7.xyz, r6.wwww, r7.xyzx
      dp3 r6.w, r9.xyzx, r7.xyzx  // fCosCurAngle<0:NaN:Inf>
      lt r7.x, r6.w, r4.w
      if_nz r7.x
        lt r7.x, r5.w, r6.w
        not r7.y, r7.x
        if_nz r7.x
          mov r5.w, -r5.w
          add r6.w, r5.w, r6.w
          add r4.w, r4.w, r5.w
          div r4.w, r6.w, r4.w  // fFallOff<0:NaN:Inf>
        else 

#line 467
          mov r4.w, l(1.000000)  // fFallOff<0: 1f>

#line 461
        endif 
      else 
        mov r4.w, l(1.000000)  // fFallOff<0: 1f>
        mov r7.y, l(0)
      endif 

#line 471
      if_z r7.y
        if_nz v16.z

#line 474
          div r7.xzw, r8.xxyz, r7.wwww  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 479
          lt r5.w, r7.x, l(-1.000000)
          lt r6.w, l(1.000000), r7.x
          or r5.w, r5.w, r6.w
          lt r6.w, r7.z, l(-1.000000)
          or r5.w, r5.w, r6.w
          lt r6.w, l(1.000000), r7.z
          or r5.w, r5.w, r6.w
          lt r6.w, r7.w, l(0.000000)
          or r5.w, r5.w, r6.w
          lt r6.w, l(3.000000), r7.w
          or r5.w, r5.w, r6.w

#line 484
          not r6.w, r5.w
          not r6.w, r6.w
          if_z r5.w
            mov r9.xy, -r0.xyxx
            add r9.xy, r0.zwzz, r9.xyxx  // Offset<0:NaN:Inf,1:NaN:Inf>
            mul r8.w, r9.x, l(0.200000)
            mov r8.w, -r8.w
            add r7.x, r7.x, r8.w  // alLight<18:NaN:Inf>
            mul r8.w, r9.y, l(0.200000)
            mov r8.w, -r8.w
            add r7.z, r7.z, r8.w  // alLight<19:NaN:Inf>

#line 489
            mul r7.x, r7.x, l(0.500000)
            add r9.x, r7.x, l(0.500000)  // alLight<18:NaN:Inf>
            mul r7.x, r7.z, l(-0.500000)
            add r9.y, r7.x, l(0.500000)  // alLight<19:NaN:Inf>
            if_nz v16.w

#line 504
              nop 
              mov r7.x, r1.y  // fWidth<0:Inf>
              mov r7.z, r1.z  // fHeight<0:Inf>
              mov r9.zw, r0.zzzw  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 253
              nop 
              mov r9.zw, r9.zzzw  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 247
              dp2 r8.w, r9.zwzz, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r8.w, r8.w, l(256.000000)
              add r8.w, r8.w, l(0.000000)
              div r9.z, l(123456792.000000), r8.w
              mov r9.w, -r9.z
              max r10.x, r9.w, r9.z
              ge r9.z, r9.z, r9.w
              frc r9.w, r10.x
              mov r10.x, -r9.w
              movc r9.z, r9.z, r9.w, r10.x
              mul r8.w, r8.w, r9.z
              sincos null, r8.w, r8.w
              frc r8.w, r8.w  // RandomGelfond<0:NaN>

#line 253
              mov r8.w, r8.w  // frand<0:NaN>
              add r8.w, r8.w, l(0.500000)
              mul r7.x, r7.x, r8.w
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mul r7.z, r7.z, r8.w
              div r10.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r7.w
              mul r8.w, r8.w, l(0.800000)
              add r8.w, r8.w, l(0.000000)  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r9.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.w, r9.z, r8.w  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r8.w, r8.w, r9.w  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r8.w, r8.w, r9.w  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.w, r9.z, r8.w  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r8.w, r9.z, r8.w  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 504
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r8.w, r8.w, r9.z  // fsum<0:NaN>

#line 508
              if_nz v21.x

#line 511
                mov r9.z, -r7.w
                max r9.z, r7.w, r9.z
                mul r9.z, r9.z, l(0.100000)
                add r10.x, r9.z, r9.x  // alLight<18:NaN:Inf>
                add r10.y, r9.z, r9.y  // alLight<19:NaN:Inf>

#line 521
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r9.z, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.z, r9.z, r10.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.z, r9.z, r10.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.z, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r7.z  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r8.w, r7.x, r9.z  // fsum<0:NaN>

#line 508
              endif 

#line 528
              div r7.x, r8.w, l(16.000000)  // shadowFactor<0:NaN>

#line 492
            else 

#line 532
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r9.xyxx, t11.xxxx, s2, r7.w
              div r7.x, r7.z, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 492
            endif 

#line 484
          else 
            mov r7.x, l(1.000000)  // shadowFactor<0: 1f>
          endif 
          or r5.w, r5.w, r6.w

#line 471
        else 

#line 537
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r8.xyxx, t11.xxxx, s2, r8.z
          div r7.x, r6.w, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
          mov r5.w, l(0)

#line 471
        endif 
      else 
        mov r7.x, l(1.000000)  // shadowFactor<0: 1f>
        mov r5.w, l(-1)
      endif 
      or r5.w, r7.y, r5.w

#line 456
    else 
      mov r4.w, l(1.000000)  // fFallOff<0: 1f>
      mov r7.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r5.w, l(0)
    endif 

#line 541
    if_z r5.w
      dp3 r5.w, r2.xyzx, r2.xyzx
      rsq r5.w, r5.w
      mul r7.yzw, r2.xxyz, r5.wwww
      dp3 r5.x, r5.xyzx, r7.yzwy
      max r5.x, r5.x, l(0.000000)
      min r5.x, r5.x, l(1.000000)
      mul r4.y, r4.y, r5.x
      mul r5.xyz, r6.xyzx, r4.yyyy
      mul r5.xyz, r4.wwww, r5.xyzx
      mul r5.xyz, r7.xxxx, r5.xyzx
      add r3.xyz, r3.xyzx, r5.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 453
    mov r4.y, l(0)
    mov r4.w, l(0)
  else 
    mov r4.y, l(-1)
    mov r4.w, l(-1)
  endif 
  and r4.w, r4.w, r4.x
  or r1.w, r1.w, r4.w
  and r4.x, r4.y, r4.x
  or r2.w, r2.w, r4.x

#line 448
else 
  mov r1.w, l(-1)
endif 
not r1.w, r1.w
not r4.x, r2.w
and r4.x, r1.w, r4.x
ult r4.y, l(3), v28.x
and r4.x, r4.x, r4.y
if_nz r4.x
  mov r5.xyz, v23.yzwy  // alLight<1,2,3>
  mov r6.xyz, v24.xyzx  // alLight<4,5,6>
  mov r7.xyz, v25.xyzx  // alLight<8,9,10>
  mov r8.xyz, v27.xyzx  // alLight<18,19,20>
  mov r4.x, v23.x  // alLight<0>
  mov r4.w, v9.w  // alLight<11>
  mov r5.w, v15.w  // alLight<12>
  mov r6.w, v26.w  // alLight<17>
  mov r7.w, v27.w  // alLight<21>

#line 453
  not r8.w, r2.w
  and r1.w, r1.w, r8.w
  if_nz r1.w

#line 456
    ieq r6.w, r6.w, l(3)
    if_nz r6.w
      dp3 r6.w, r5.xyzx, r5.xyzx
      rsq r6.w, r6.w
      mul r9.xyz, r5.xyzx, r6.wwww
      dp3 r6.w, r7.xyzx, r7.xyzx
      rsq r6.w, r6.w
      mul r7.xyz, r6.wwww, r7.xyzx
      dp3 r6.w, r9.xyzx, r7.xyzx  // fCosCurAngle<0:NaN:Inf>
      lt r7.x, r6.w, r4.w
      if_nz r7.x
        lt r7.x, r5.w, r6.w
        not r7.y, r7.x
        if_nz r7.x
          mov r5.w, -r5.w
          add r6.w, r5.w, r6.w
          add r4.w, r4.w, r5.w
          div r4.w, r6.w, r4.w  // fFallOff<0:NaN:Inf>
        else 

#line 467
          mov r4.w, l(1.000000)  // fFallOff<0: 1f>

#line 461
        endif 
      else 
        mov r4.w, l(1.000000)  // fFallOff<0: 1f>
        mov r7.y, l(0)
      endif 

#line 471
      if_z r7.y
        if_nz v21.w

#line 474
          div r7.xzw, r8.xxyz, r7.wwww  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 479
          lt r5.w, r7.x, l(-1.000000)
          lt r6.w, l(1.000000), r7.x
          or r5.w, r5.w, r6.w
          lt r6.w, r7.z, l(-1.000000)
          or r5.w, r5.w, r6.w
          lt r6.w, l(1.000000), r7.z
          or r5.w, r5.w, r6.w
          lt r6.w, r7.w, l(0.000000)
          or r5.w, r5.w, r6.w
          lt r6.w, l(3.000000), r7.w
          or r5.w, r5.w, r6.w

#line 484
          not r6.w, r5.w
          not r6.w, r6.w
          if_z r5.w
            mov r0.xy, -r0.xyxx
            add r0.xy, r0.xyxx, r0.zwzz  // Offset<0:NaN:Inf,1:NaN:Inf>
            mul r0.x, r0.x, l(0.200000)
            mov r0.x, -r0.x
            add r0.x, r0.x, r7.x  // alLight<18:NaN:Inf>
            mul r0.y, r0.y, l(0.200000)
            mov r0.y, -r0.y
            add r0.y, r0.y, r7.z  // alLight<19:NaN:Inf>

#line 489
            mul r0.x, r0.x, l(0.500000)
            add r9.x, r0.x, l(0.500000)  // alLight<18:NaN:Inf>
            mul r0.x, r0.y, l(-0.500000)
            add r9.y, r0.x, l(0.500000)  // alLight<19:NaN:Inf>
            if_nz v26.x

#line 504
              nop 
              mov r1.y, r1.y  // fWidth<0:Inf>
              mov r1.z, r1.z  // fHeight<0:Inf>
              mov r0.xy, r0.zwzz  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 253
              nop 
              mov r0.xy, r0.xyxx  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 247
              dp2 r0.x, r0.xyxx, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r0.x, r0.x, l(256.000000)
              add r0.x, r0.x, l(0.000000)
              div r0.y, l(123456792.000000), r0.x
              mov r7.x, -r0.y
              max r7.z, r0.y, r7.x
              ge r0.y, r0.y, r7.x
              frc r7.x, r7.z
              mov r7.z, -r7.x
              movc r0.y, r0.y, r7.x, r7.z
              mul r0.x, r0.x, r0.y
              sincos null, r0.x, r0.x
              frc r0.x, r0.x  // RandomGelfond<0:NaN>

#line 253
              mov r0.x, r0.x  // frand<0:NaN>
              add r0.x, r0.x, l(0.500000)
              mul r0.y, r0.x, r1.y
              div r10.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              mul r0.x, r0.x, r1.z
              div r10.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r1.yz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t11.xxxx, s2, r7.w
              mul r1.y, r1.y, l(0.800000)
              add r1.y, r1.y, l(0.000000)  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              div r10.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r7.xz, r9.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
              mul r7.x, r7.x, l(0.800000)
              add r1.y, r1.y, r7.x  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
              mul r7.x, r7.x, l(0.800000)
              add r1.y, r1.y, r7.x  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 

#line 504
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>
              nop 

#line 253
              nop 
              div r10.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 504
              add r7.xz, r9.xxyx, r10.xxyx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.y, r1.z, r1.y  // fsum<0:NaN>

#line 508
              if_nz v26.y

#line 511
                mov r1.z, -r7.w
                max r1.z, r1.z, r7.w
                mul r1.z, r1.z, l(0.100000)
                add r10.x, r1.z, r9.x  // alLight<18:NaN:Inf>
                add r10.y, r1.z, r9.y  // alLight<19:NaN:Inf>

#line 521
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r7.xzxx, t11.xxxx, s2, r7.w
                mul r1.z, r1.z, l(0.200000)
                add r1.z, r1.z, r1.y  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r7.xz, r10.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r1.z, r7.x, r1.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r7.z, r7.z, l(0.200000)
                add r1.z, r1.z, r7.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r7.z, r7.z, l(0.200000)
                add r1.z, r1.z, r7.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r1.z, r7.x, r1.z  // fsum<0:NaN>
                nop 

#line 253
                nop 

#line 521
                add r1.z, r7.x, r1.z  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(-1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r7.xz, r10.xxyx, r11.xxyx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xzxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r1.z, r1.z, r7.x  // fsum<0:NaN>
                nop 

#line 253
                nop 
                div r11.x, l(1.000000), r0.y  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r0.x  // TexOffset2<1:NaN:Inf>

#line 521
                add r0.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t11.xxxx, s2, r7.w
                mul r0.x, r0.x, l(0.200000)
                add r1.y, r0.x, r1.z  // fsum<0:NaN>

#line 508
              endif 

#line 528
              div r0.x, r1.y, l(16.000000)  // shadowFactor<0:NaN>

#line 492
            else 

#line 532
              sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r9.xyxx, t11.xxxx, s2, r7.w
              div r0.x, r0.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 492
            endif 

#line 484
          else 
            mov r0.x, l(1.000000)  // shadowFactor<0: 1f>
          endif 
          or r0.y, r5.w, r6.w

#line 471
        else 

#line 537
          sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r8.xyxx, t11.xxxx, s2, r8.z
          div r0.x, r1.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
          mov r0.y, l(0)

#line 471
        endif 
      else 
        mov r0.x, l(1.000000)  // shadowFactor<0: 1f>
        mov r0.y, l(-1)
      endif 
      or r0.y, r7.y, r0.y

#line 456
    else 
      mov r4.w, l(1.000000)  // fFallOff<0: 1f>
      mov r0.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r0.y, l(0)
    endif 

#line 541
    if_z r0.y
      dp3 r0.y, r2.xyzx, r2.xyzx
      rsq r0.y, r0.y
      mul r7.xyz, r0.yyyy, r2.xyzx
      dp3 r0.y, r5.xyzx, r7.xyzx
      max r0.y, r0.y, l(0.000000)
      min r0.y, r0.y, l(1.000000)
      mul r0.y, r4.x, r0.y
      mul r5.xyz, r6.xyzx, r0.yyyy
      mul r5.xyz, r4.wwww, r5.xyzx
      mul r5.xyz, r0.xxxx, r5.xyzx
      add r3.xyz, r3.xyzx, r5.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 453
    mov r0.x, l(0)
  else 
    mov r0.x, l(-1)
  endif 
  and r0.x, r0.x, r1.w
  or r2.w, r2.w, r0.x

#line 448
endif 
retc_nz r2.w

#line 574
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r0.zwzz, t15.wxyz, s0  // f4TexCol<3:Inf,0:Inf,1:Inf,2:Inf>

#line 668
mov r1.yzw, -v6.xxyz

#line 563
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r0.zwzz, t17.xyzw, s0

#line 668
add r1.yzw, r1.yyzw, v5.xxyz

#line 653
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r0.zwzz, t16.xyzw, s0

#line 668
dp3 r0.x, r1.yzwy, r1.yzwy
rsq r0.y, r0.x
mul r1.yzw, r0.yyyy, r1.yyzw  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r0.y, r1.yzwy, r2.xyzx
add r2.w, r0.y, r0.y
mov r2.w, -r2.w
mul r4.xw, r2.wwww, r2.xxxy
add r4.xw, r1.yyyz, r4.xxxw  // f3Reflection<0:NaN:Inf,1:NaN:Inf>
mul r2.w, r0.y, r0.y
mov r2.w, -r2.w
add r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, l(0.980100)
mov r2.w, -r2.w
add r2.w, r2.w, l(1.000000)
sqrt r6.w, r2.w
mul r7.w, r0.y, l(0.990000)
add r6.w, r6.w, r7.w
ge r2.w, r2.w, l(0.000000)
mul r8.xy, r1.yzyy, l(0.990000, 0.990000, 0.000000, 0.000000)
mul r8.zw, r2.xxxy, r6.wwww
mov r8.zw, -r8.zzzw
add r8.xy, r8.zwzz, r8.xyxx
movc r8.xy, r2.wwww, r8.xyxx, l(0,0,0,0)  // f3Refraction<0:NaN:Inf,1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t19.xyzw, s0  // f4RefrColor<0:Inf,1:Inf,2:Inf,3:Inf>
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r4.xwxx, t19.xyzw, s0  // f4ReflColor<0:Inf,1:Inf,2:Inf,3:Inf>

#line 701
mov r10.xyz, v7.yzwy  // alLight<1,2,3>

#line 676
sample_indexable(texture2d)(float,float,float,float) r2.w, r0.zwzz, t19.xyzw, s0  // fReflectionFactor<0:Inf>

#line 702
mov r10.xyz, r10.xyzx  // f3LightDir<0,1,2>

#line 706
mov r2.xyz, r2.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
mov r11.xyz, v5.xyzx  // input<15,16,17>
mov r12.xyz, v6.xyzx  // input<18,19,20>
mov r13.xyz, r10.xyzx  // f3LightDir<0,1,2>

#line 279
mov r14.xyz, r2.xyzx  // f3Nn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r12.xyz, -r12.xyzx
add r11.xyz, r11.xyzx, r12.xyzx
dp3 r4.x, r11.xyzx, r11.xyzx
rsq r4.x, r4.x
mul r11.xyz, r4.xxxx, r11.xyzx  // f3Vn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r4.x, r13.xyzx, r13.xyzx
rsq r4.x, r4.x
mul r12.xyz, r4.xxxx, r13.xyzx  // f3Ln<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
add r13.xyz, r11.xyzx, r12.xyzx
dp3 r4.x, r13.xyzx, r13.xyzx
rsq r4.x, r4.x
mul r13.xyz, r4.xxxx, r13.xyzx  // f3Hn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r4.x, r13.xyzx, r12.xyzx
div r4.x, r4.x, l(2.000000)
add r15.x, r4.x, l(0.500000)  // f2huv<0:NaN:Inf>
dp3 r4.x, r14.xyzx, r13.xyzx
div r4.x, r4.x, l(2.000000)
add r4.x, r4.x, l(0.500000)
mov r4.x, -r4.x
add r15.y, r4.x, l(1.000000)  // f2huv<1:NaN:Inf>
dp3 r4.x, r12.xyzx, r14.xyzx
div r4.x, r4.x, l(2.000000)
add r12.x, r4.x, l(0.500000)  // f2nuv<0:NaN:Inf>
dp3 r4.x, r14.xyzx, r11.xyzx
div r4.x, r4.x, l(2.000000)
add r4.x, r4.x, l(0.500000)
mov r4.x, -r4.x
add r12.y, r4.x, l(1.000000)  // f2nuv<1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r15.xyxx, t20.xyzw, s0  // f3ht<0:Inf,1:Inf,2:Inf>
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t18.xyzw, s0  // f3nt<0:Inf,1:Inf,2:Inf>

#line 723
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r0.zwzz, t21.xyzw, s0

#line 543
mul r3.xyz, r3.xyzx, cb1[1].yyyy
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // f4Diffuse<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 550
ine r4.x, l(0, 0, 0, 0), cb1[4].z
if_nz r4.x

#line 553
  if_nz v28.x
    dp3 r4.x, v7.yzwy, v7.yzwy
    rsq r4.x, r4.x
    mul r15.xyz, r4.xxxx, v7.yzwy
    add r15.xyz, r1.yzwy, r15.xyzx
    dp3 r4.x, r15.xyzx, r15.xyzx
    rsq r4.x, r4.x
    mul r15.xyz, r4.xxxx, r15.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r2.xyzx, r2.xyzx
    rsq r4.x, r4.x
    mul r16.xyz, r2.xyzx, r4.xxxx
    dp3 r4.x, r16.xyzx, r15.xyzx
    max r4.x, r4.x, l(0.000000)
    min r4.x, r4.x, l(1.000000)
    log r4.x, r4.x
    mul r4.x, r4.x, cb1[1].x
    exp r4.x, r4.x
    add r4.x, r4.x, l(0.000000)  // fSpecular<0:NaN:Inf>

#line 553
  else 
    mov r4.x, l(0)  // fSpecular<0: 0f>
  endif 
  if_nz r3.w
    dp3 r4.w, v13.yzwy, v13.yzwy
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, v13.yzwy
    add r15.xyz, r1.yzwy, r15.xyzx
    dp3 r4.w, r15.xyzx, r15.xyzx
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, r15.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.w, r2.xyzx, r2.xyzx
    rsq r4.w, r4.w
    mul r16.xyz, r2.xyzx, r4.wwww
    dp3 r4.w, r16.xyzx, r15.xyzx
    max r4.w, r4.w, l(0.000000)
    min r4.w, r4.w, l(1.000000)
    log r4.w, r4.w
    mul r4.w, r4.w, cb1[1].x
    exp r4.w, r4.w
    add r4.x, r4.w, r4.x  // fSpecular<0:NaN:Inf>

#line 553
  endif 
  if_nz r4.z
    dp3 r4.w, v18.yzwy, v18.yzwy
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, v18.yzwy
    add r15.xyz, r1.yzwy, r15.xyzx
    dp3 r4.w, r15.xyzx, r15.xyzx
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, r15.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.w, r2.xyzx, r2.xyzx
    rsq r4.w, r4.w
    mul r16.xyz, r2.xyzx, r4.wwww
    dp3 r4.w, r16.xyzx, r15.xyzx
    max r4.w, r4.w, l(0.000000)
    min r4.w, r4.w, l(1.000000)
    log r4.w, r4.w
    mul r4.w, r4.w, cb1[1].x
    exp r4.w, r4.w
    add r4.x, r4.w, r4.x  // fSpecular<0:NaN:Inf>

#line 553
  endif 
  if_nz r4.y
    dp3 r4.w, v23.yzwy, v23.yzwy
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, v23.yzwy
    add r15.xyz, r1.yzwy, r15.xyzx
    dp3 r4.w, r15.xyzx, r15.xyzx
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, r15.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.w, r2.xyzx, r2.xyzx
    rsq r4.w, r4.w
    mul r2.xyz, r2.xyzx, r4.wwww
    dp3 r2.x, r2.xyzx, r15.xyzx
    max r2.x, r2.x, l(0.000000)
    min r2.x, r2.x, l(1.000000)
    log r2.x, r2.x
    mul r2.x, r2.x, cb1[1].x
    exp r2.x, r2.x
    add r4.x, r2.x, r4.x  // fSpecular<0:NaN:Inf>

#line 553
  endif 

#line 558
  ine r2.x, l(0, 0, 0, 0), cb1[6].z
  if_nz r2.x
    mul r2.xyz, r3.xyzx, r4.xxxx
    mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 
    ine r4.w, l(0, 0, 0, 0), cb1[5].z
    if_nz r4.w
      mul r15.xyz, r5.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r16.xyz, r3.xyzx, r4.xxxx
      mul r2.xyz, r15.xyzx, r16.xyzx  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    else 

#line 563
      mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r15.xyz, r3.xyzx, r4.xxxx
      mul r2.xyz, r6.xyzx, r15.xyzx  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 560
    endif 
  endif 

#line 550
else 

#line 567
  mov r2.xyz, l(0,0,0,0)  // f4SpecCol<0: 0f,1: 0f,2: 0f>

#line 550
endif 

#line 573
ine r4.x, l(0, 0, 0, 0), cb1[4].x
if_nz r4.x
  mov r6.xyz, r5.yzwy  // f4TexCol<0:Inf,1:Inf,2:Inf>
else 
  ine r4.w, l(0, 0, 0, 0), cb1[5].x
  if_nz r4.w
    mov r6.xyz, l(0,0,0,0)  // f4TexCol<0: 0f,1: 0f,2: 0f>
    mov r5.x, l(0)  // f4TexCol<3: 0f>
  else 

#line 578
    mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // f4TexCol<0: 1f,1: 1f,2: 1f>
    mov r5.x, l(1.000000)  // f4TexCol<3: 1f>

#line 575
  endif 
endif 

#line 581
ine r4.w, l(0, 0, 0, 0), cb1[7].z
if_nz r4.w

#line 585
  resinfo_indexable(texture2d)(float,float,float,float)_uint r15.xy, l(0), t15.xyzw  // iWidth<0>, iHeight<0>, iLevels<0>

#line 588
  utof r4.w, r15.x
  mul r16.x, r0.z, r4.w  // f2TexCoord2<0:NaN:Inf>
  utof r0.z, r15.y
  mul r16.y, r0.z, r0.w  // f2TexCoord2<1:NaN:Inf>

#line 593
  ld_indexable(texture2d)(float,float,float,float) r15.xyz, l(0, 0, 0, 0), t15.xyzw  // f4ChromaKey<0:Inf,1:Inf,2:Inf,3:Inf>

#line 602
  add r0.zw, r16.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)  // f2TexPos1<0:NaN:Inf,1:NaN:Inf>
  add r16.zw, r16.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)  // f2TexPos2<0:NaN:Inf,1:NaN:Inf>
  add r17.xy, r16.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000)  // f2TexPos3<0:NaN:Inf,1:NaN:Inf>
  add r16.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // f2TexPos4<0:NaN:Inf,1:NaN:Inf>
  ftoi r18.xy, r0.zwzz
  mov r18.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r18.xyzw, r18.xyzw, t15.xyzw  // f4Col1<0:Inf,1:Inf,2:Inf,3:Inf>
  ftoi r19.xy, r16.zwzz
  mov r19.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyzw, t15.xyzw  // f4Col2<0:Inf,1:Inf,2:Inf,3:Inf>
  ftoi r17.xy, r17.xyxx
  mov r17.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r17.xyzw, r17.xyzw, t15.xyzw  // f4Col3<0:Inf,1:Inf,2:Inf,3:Inf>
  ftoi r16.xy, r16.xyxx
  mov r16.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r16.xyzw, r16.xyzw, t15.xyzw  // f4Col4<0:Inf,1:Inf,2:Inf,3:Inf>
  eq r4.w, r18.x, r15.x
  eq r6.w, r18.y, r15.y
  and r4.w, r4.w, r6.w
  eq r6.w, r18.z, r15.z
  and r4.w, r4.w, r6.w
  if_nz r4.w
    mov r18.x, l(0)  // f4Col1<0: 0f>
    mov r18.y, l(0)  // f4Col1<1: 0f>
    mov r18.z, l(0)  // f4Col1<2: 0f>
    mov r18.w, l(0)  // f4Col1<3: 0f>
  endif 
  eq r4.w, r19.x, r15.x
  eq r6.w, r19.y, r15.y
  and r4.w, r4.w, r6.w
  eq r6.w, r19.z, r15.z
  and r4.w, r4.w, r6.w
  if_nz r4.w
    mov r19.xyzw, l(0,0,0,0)  // f4Col2<0: 0f,1: 0f,2: 0f,3: 0f>
  endif 
  eq r4.w, r17.x, r15.x
  eq r6.w, r17.y, r15.y
  and r4.w, r4.w, r6.w
  eq r6.w, r17.z, r15.z
  and r4.w, r4.w, r6.w
  if_nz r4.w
    mov r17.x, l(0)  // f4Col3<0: 0f>
    mov r17.y, l(0)  // f4Col3<1: 0f>
    mov r17.z, l(0)  // f4Col3<2: 0f>
    mov r17.w, l(0)  // f4Col3<3: 0f>
  endif 

#line 613
  eq r4.w, r16.x, r15.x
  eq r6.w, r16.y, r15.y
  and r4.w, r4.w, r6.w
  eq r6.w, r16.z, r15.z
  and r4.w, r4.w, r6.w
  if_nz r4.w
    mov r16.xyzw, l(0,0,0,0)  // f4Col4<0: 0f,1: 0f,2: 0f,3: 0f>
  endif 
  frc r0.z, r0.z  // f2TexPos1<0:NaN>
  frc r0.w, r0.w  // f2TexPos1<1:NaN>

#line 617
  mov r4.w, -r18.w
  add r4.w, r4.w, r19.w
  mul r4.w, r0.z, r4.w
  add r4.w, r18.w, r4.w  // fAlpha<0:NaN:Inf>
  mov r6.w, -r17.w
  add r6.w, r6.w, r16.w
  mul r6.w, r0.z, r6.w
  add r6.w, r17.w, r6.w
  mov r7.w, -r4.w
  add r6.w, r6.w, r7.w
  mul r6.w, r0.w, r6.w
  add r5.x, r4.w, r6.w  // fAlpha<0:NaN:Inf>

#line 627
  mov r4.w, -r18.x
  add r4.w, r4.w, r19.x
  mul r4.w, r0.z, r4.w
  add r4.w, r18.x, r4.w  // f4Col1<0:NaN:Inf>
  mov r6.w, -r18.y
  add r6.w, r6.w, r19.y
  mul r6.w, r0.z, r6.w
  add r6.w, r18.y, r6.w  // f4Col1<1:NaN:Inf>
  mov r7.w, -r18.z
  add r7.w, r7.w, r19.z
  mul r7.w, r0.z, r7.w
  add r7.w, r18.z, r7.w  // f4Col1<2:NaN:Inf>

#line 632
  mov r8.w, -r17.x
  add r8.w, r8.w, r16.x
  mul r8.w, r0.z, r8.w
  add r8.w, r17.x, r8.w  // f4Col3<0:NaN:Inf>
  mov r9.w, -r17.y
  add r9.w, r9.w, r16.y
  mul r9.w, r0.z, r9.w
  add r9.w, r17.y, r9.w  // f4Col3<1:NaN:Inf>
  mov r10.w, -r17.z
  add r10.w, r10.w, r16.z
  mul r0.z, r0.z, r10.w
  add r0.z, r17.z, r0.z  // f4Col3<2:NaN:Inf>

#line 637
  mov r10.w, -r4.w
  add r8.w, r8.w, r10.w
  mul r8.w, r0.w, r8.w
  add r6.x, r4.w, r8.w  // f4TexCol<0:NaN:Inf>
  mov r4.w, -r6.w
  add r4.w, r4.w, r9.w
  mul r4.w, r0.w, r4.w
  add r6.y, r6.w, r4.w  // f4TexCol<1:NaN:Inf>
  mov r4.w, -r7.w
  add r0.z, r0.z, r4.w
  mul r0.z, r0.w, r0.z
  add r6.z, r7.w, r0.z  // f4TexCol<2:NaN:Inf>
  mov r5.x, r5.x  // f4TexCol<3:NaN:Inf>

#line 581
endif 

#line 644
ine r0.z, l(0, 0, 0, 0), cb1[4].y
if_nz r0.z
  ine r0.z, l(0, 0, 0, 0), cb1[7].y
  if_nz r0.z
    mov r15.xyz, cb1[0].xyzx  // f4Glow<0,1,2>
  else 

#line 650
    ine r0.z, l(0, 0, 0, 0), cb1[5].y
    if_nz r0.z
      mov r16.xyz, -r3.xyzx
      add r16.xyz, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r16.xyz, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r15.xyz, r5.yzwy, r16.xyzx  // f4Glow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    else 

#line 653
      mov r16.xyz, -r3.xyzx
      add r16.xyz, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r16.xyz, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r15.xyz, r7.xyzx, r16.xyzx  // f4Glow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 650
    endif 

#line 646
  endif 
else 

#line 657
  mov r15.xyz, l(0,0,0,0)  // f4Glow<0: 0f,1: 0f,2: 0f>

#line 644
endif 

#line 659
ine r0.z, l(0, 0, 0, 0), cb1[7].x
if_nz r0.z
  mul r6.xyz, r3.xyzx, r6.xyzx  // f4TexCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 663
add r6.xyz, r6.xyzx, cb1[0].xyzx
add r6.xyz, r15.xyzx, r6.xyzx
add r6.xyz, r2.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 666
ine r0.z, l(0, 0, 0, 0), cb1[7].w
if_nz r0.z

#line 674
  ine r0.z, l(0, 0, 0, 0), cb1[8].w
  if_nz r0.z

#line 677
    mov r7.xyz, -r8.xyzx
    add r7.xyz, r7.xyzx, r9.xyzx
    mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    add r7.xyz, r7.xyzx, r8.xyzx
    div r7.xyz, r7.xyzx, cb1[2].wwww
    mul r7.xyz, r2.wwww, r7.xyzx
    dp3 r0.z, r6.xyzx, r6.xyzx
    sqrt r0.z, r0.z
    mul r0.z, r0.z, r0.z
    mul r7.xyz, r0.zzzz, r7.xyzx
    add r6.xyz, r6.xyzx, r7.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 674
  else 

#line 681
    mov r7.xyz, -r8.xyzx
    add r7.xyz, r7.xyzx, r9.xyzx
    mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    add r7.xyz, r7.xyzx, r8.xyzx
    div r7.xyz, r7.xyzx, cb1[2].wwww
    dp3 r0.z, r6.xyzx, r6.xyzx
    sqrt r0.z, r0.z
    mul r0.z, r0.z, r0.z
    mul r7.xyz, r0.zzzz, r7.xyzx
    add r6.xyz, r6.xyzx, r7.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 674
  endif 

#line 666
endif 

#line 687
if_nz r4.x
  max r0.z, r5.x, l(0.000000)
  min r0.z, r0.z, l(1.000000)
  mov r0.w, -cb1[1].w
  add r0.w, r0.w, l(1.000000)
  mul r0.z, r0.w, r0.z
  add r6.w, r0.z, cb1[0].w  // f4ColorOut<3:Inf>
else 

#line 690
  mov r6.w, cb1[0].w  // f4ColorOut<3>

#line 687
endif 

#line 693
ine r0.z, l(0, 0, 0, 0), cb1[8].y
and r0.z, r1.x, r0.z
ine r0.w, l(0, 0, 0, 0), cb1[8].x
and r0.z, r0.w, r0.z
if_nz r0.z

#line 701
  mov r7.xyz, v8.xyzx  // alLight<4,5,6>
  mov r7.xyz, r7.xyzx  // f3LightColor<0,1,2>

#line 708
  nop 
  mov r7.xyz, r7.xyzx  // f3LampColor<0,1,2>
  mov r8.xyz, cb1[0].xyzx  // f3AmbiColor<0,1,2>
  mov r3.xyz, r3.xyzx  // f3DiffColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 287
  mul r7.xyz, r7.xyzx, r12.xyzx
  mul r7.xyz, r8.xyzx, r7.xyzx
  add r7.xyz, r7.xyzx, r11.xyzx  // f3nspec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r3.xyz, r3.xyzx, r7.xyzx  // texBRDF<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 708
  utof r0.z, v28.x
  div r0.w, l(20.000000), cb1[3].y
  mul r0.z, r0.w, r0.z
  div r3.xyz, r3.xyzx, r0.zzzz
  dp3 r0.z, r6.xyzx, r6.xyzx
  sqrt r0.z, r0.z
  mul r0.z, r0.z, r0.z
  mul r3.xyz, r0.zzzz, r3.xyzx
  add r6.xyz, r3.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 693
endif 

#line 713
ine r0.z, l(0, 0, 0, 0), cb1[8].z
if_nz r0.z
  mov r0.z, cb1[3].x  // fMaterialThickness<0>
  mov r0.w, cb1[3].z  // fRimScalar<0>
  mov r1.x, cb1[2].x  // fExtinctionCoefficientRed<0>
  mov r2.w, cb1[2].y  // fExtinctionCoefficientGreen<0>
  mov r3.x, cb1[2].z  // fExtinctionCoefficientBlue<0>
  mov r2.xyz, r2.xyzx  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r5.yzw, r5.yyzw  // f4TexColor<0:Inf,1:Inf,2:Inf>
  dp3 r3.y, r13.xyzx, r13.xyzx
  sqrt r3.y, r3.y  // fThickValue<0:NaN:Inf>

#line 730
  if_nz v28.x
    mov r7.xyzw, v12.xyzw  // alLight<18,19,20,21>
    mov r8.xyz, v8.xyzx  // alLight<4,5,6>
    mov r3.z, v11.x  // alLight<17>

#line 735
    dp3 r4.x, r10.xyzx, r10.xyzx
    rsq r4.x, r4.x
    mul r9.xyz, r4.xxxx, r10.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // f4LightPos<0,1,2,3>
    mov r8.xyz, r8.xyzx  // f4LightCol<0,1,2>
    mov r10.xyzw, -v6.xyzw
    add r7.xyzw, r7.xyzw, r10.xyzw
    dp4 r4.x, r7.xyzw, r7.xyzw
    sqrt r4.x, r4.x
    div r4.x, l(1.000000), r4.x
    mul r4.x, r4.x, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r4.w, r4.x, l(1.000000)
    if_nz r4.w
      mov r4.x, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 747
    nop 
    mov r9.xyz, r9.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r4.w, r9.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.w, r4.w  // HalfLambert<0:NaN:Inf>

#line 747
    mul r7.xyz, r4.xxxx, r4.wwww  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r10.xyz, -r14.xyzx
    dp3 r4.w, r10.xyzx, r9.xyzx
    max r4.w, r4.w, l(0.000000)
    mul r10.xyz, r0.zzzz, r4.wwww  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r11.xyz, -r1.yzwy  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r4.w, r11.xyzx, r9.xyzx  // fProduct<0:NaN:Inf>
    mul r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.w, r4.w  // HalfLambert<0:NaN:Inf>

#line 750
    mul r4.w, r0.z, r4.w
    add r10.xyz, r4.wwww, r10.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r10.xyz, r4.xxxx, r10.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.x, r1.x, r10.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r11.y, r2.w, r10.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r11.z, r3.x, r10.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r10.xyz, r3.yyyy, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.w, r14.xyzx, r1.yzwy
    max r4.w, r4.w, l(0.000000)
    mov r4.w, -r4.w
    add r11.xyz, r4.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.xyz, r11.xyzx, r11.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.w, r14.xyzx, r9.xyzx
    max r4.w, r4.w, l(0.000000)
    mul r12.xyz, r2.xyzx, r4.wwww
    mul r11.xyz, r11.xyzx, r12.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 761
    mul r7.xyz, r5.yzwy, r7.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r7.xyz, r10.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r12.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r11.xyz, r0.wwww, r11.xyzx
    mul r11.xyz, r4.xxxx, r11.xyzx
    mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r11.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 268
    add r9.xyz, r9.xyzx, r14.xyzx
    dp3 r4.w, r9.xyzx, r9.xyzx
    rsq r4.w, r4.w
    mul r9.xyz, r4.wwww, r9.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.w, r14.xyzx, r9.xyzx
    max r4.w, r4.w, l(0.000000)
    min r4.w, r4.w, l(1.000000)
    mul r4.w, r4.w, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 766
    mul r4.x, r4.x, r4.w
    mul r9.xyz, r2.xyzx, r4.xxxx
    mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r9.xyz, r9.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r7.xyz, r7.xyzx, r9.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.xyz, r8.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    ieq r3.z, r3.z, l(3)
    if_nz r3.z
      mul r6.xyzw, r6.xyzw, r12.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r3.z, r0.y, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r3.z, r3.z, l(0.800000)
      lt r4.x, l(2.000000), r0.z
      and r3.z, r3.z, r4.x
      if_nz r3.z
        mov r10.xyz, r10.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 
        mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 769
    else 
      mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 730
  else 
    mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  endif 
  mov r10.w, r6.w  // f4ColorOut<3:Inf>
  if_nz r3.w
    mov r7.xyzw, v17.xyzw  // alLight<18,19,20,21>
    mov r8.xyz, v13.yzwy  // alLight<1,2,3>
    mov r9.xyz, v14.xyzx  // alLight<4,5,6>
    mov r3.z, v16.y  // alLight<17>

#line 735
    dp3 r3.w, r8.xyzx, r8.xyzx
    rsq r3.w, r3.w
    mul r8.xyz, r3.wwww, r8.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // f4LightPos<0,1,2,3>
    mov r9.xyz, r9.xyzx  // f4LightCol<0,1,2>
    mov r11.xyzw, -v6.xyzw
    add r7.xyzw, r7.xyzw, r11.xyzw
    dp4 r3.w, r7.xyzw, r7.xyzw
    sqrt r3.w, r3.w
    div r3.w, l(1.000000), r3.w
    mul r3.w, r3.w, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r4.x, r3.w, l(1.000000)
    if_nz r4.x
      mov r3.w, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 747
    nop 
    mov r8.xyz, r8.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r4.x, r8.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.x, r4.x  // HalfLambert<0:NaN:Inf>

#line 747
    mul r7.xyz, r3.wwww, r4.xxxx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r11.xyz, -r14.xyzx
    dp3 r4.x, r11.xyzx, r8.xyzx
    max r4.x, r4.x, l(0.000000)
    mul r11.xyz, r0.zzzz, r4.xxxx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r12.xyz, -r1.yzwy  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r4.x, r12.xyzx, r8.xyzx  // fProduct<0:NaN:Inf>
    mul r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.x, r4.x  // HalfLambert<0:NaN:Inf>

#line 750
    mul r4.x, r0.z, r4.x
    add r11.xyz, r4.xxxx, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.xyz, r3.wwww, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.x, r1.x, r11.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r12.y, r2.w, r11.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r12.z, r3.x, r11.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r11.xyz, r3.yyyy, r12.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r1.yzwy
    max r4.x, r4.x, l(0.000000)
    mov r4.x, -r4.x
    add r12.xyz, r4.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.xyz, r12.xyzx, r12.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r8.xyzx
    max r4.x, r4.x, l(0.000000)
    mul r13.xyz, r2.xyzx, r4.xxxx
    mul r12.xyz, r12.xyzx, r13.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 761
    mul r7.xyz, r5.yzwy, r7.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r7.xyz, r11.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r13.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r12.xyz, r0.wwww, r12.xyzx
    mul r12.xyz, r3.wwww, r12.xyzx
    mul r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r12.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 268
    add r8.xyz, r8.xyzx, r14.xyzx
    dp3 r4.x, r8.xyzx, r8.xyzx
    rsq r4.x, r4.x
    mul r8.xyz, r4.xxxx, r8.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r8.xyzx
    max r4.x, r4.x, l(0.000000)
    min r4.x, r4.x, l(1.000000)
    mul r4.x, r4.x, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 766
    mul r3.w, r3.w, r4.x
    mul r8.xyz, r2.xyzx, r3.wwww
    mul r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r7.xyz, r7.xyzx, r8.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r13.xyz, r9.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    ieq r3.z, r3.z, l(3)
    if_nz r3.z
      mul r6.xyzw, r10.xyzw, r13.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r3.z, r0.y, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r3.z, r3.z, l(0.800000)
      lt r3.w, l(2.000000), r0.z
      and r3.z, r3.w, r3.z
      if_nz r3.z
        mov r10.xyz, r11.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 
        mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 769
    else 
      mov r6.w, r10.w  // f4ColorOut<3:Inf>
    endif 

#line 730
  endif 
  mov r10.w, r6.w  // f4ColorOut<3:Inf>
  if_nz r4.z
    mov r7.xyzw, v22.xyzw  // alLight<18,19,20,21>
    mov r4.xzw, v18.yyzw  // alLight<1,2,3>
    mov r8.xyz, v19.xyzx  // alLight<4,5,6>
    mov r3.z, v21.z  // alLight<17>

#line 735
    dp3 r3.w, r4.xzwx, r4.xzwx
    rsq r3.w, r3.w
    mul r4.xzw, r3.wwww, r4.xxzw  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // f4LightPos<0,1,2,3>
    mov r8.xyz, r8.xyzx  // f4LightCol<0,1,2>
    mov r9.xyzw, -v6.xyzw
    add r7.xyzw, r7.xyzw, r9.xyzw
    dp4 r3.w, r7.xyzw, r7.xyzw
    sqrt r3.w, r3.w
    div r3.w, l(1.000000), r3.w
    mul r3.w, r3.w, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r5.x, r3.w, l(1.000000)
    if_nz r5.x
      mov r3.w, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 747
    nop 
    mov r4.xzw, r4.xxzw  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r5.x, r4.xzwx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r5.x, r5.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r5.x, r5.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r5.x, r5.x  // HalfLambert<0:NaN:Inf>

#line 747
    mul r7.xyz, r3.wwww, r5.xxxx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r9.xyz, -r14.xyzx
    dp3 r5.x, r9.xyzx, r4.xzwx
    max r5.x, r5.x, l(0.000000)
    mul r9.xyz, r0.zzzz, r5.xxxx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r11.xyz, -r1.yzwy  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r5.x, r11.xyzx, r4.xzwx  // fProduct<0:NaN:Inf>
    mul r5.x, r5.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r5.x, r5.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r5.x, r5.x  // HalfLambert<0:NaN:Inf>

#line 750
    mul r5.x, r0.z, r5.x
    add r9.xyz, r5.xxxx, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r9.xyz, r3.wwww, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.x, r1.x, r9.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r11.y, r2.w, r9.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r11.z, r3.x, r9.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r9.xyz, r3.yyyy, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.x, r14.xyzx, r1.yzwy
    max r5.x, r5.x, l(0.000000)
    mov r5.x, -r5.x
    add r11.xyz, r5.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.xyz, r11.xyzx, r11.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.x, r14.xyzx, r4.xzwx
    max r5.x, r5.x, l(0.000000)
    mul r12.xyz, r2.xyzx, r5.xxxx
    mul r11.xyz, r11.xyzx, r12.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 761
    mul r7.xyz, r5.yzwy, r7.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r7.xyz, r9.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r12.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r11.xyz, r0.wwww, r11.xyzx
    mul r11.xyz, r3.wwww, r11.xyzx
    mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r11.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 268
    add r4.xzw, r4.xxzw, r14.xxyz
    dp3 r5.x, r4.xzwx, r4.xzwx
    rsq r5.x, r5.x
    mul r4.xzw, r4.xxzw, r5.xxxx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r4.xzwx
    max r4.x, r4.x, l(0.000000)
    min r4.x, r4.x, l(1.000000)
    mul r4.x, r4.x, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 766
    mul r3.w, r3.w, r4.x
    mul r4.xzw, r2.xxyz, r3.wwww
    mul r4.xzw, r4.xxzw, l(1.000000, 0.000000, 1.000000, 1.000000)
    mul r4.xzw, r4.xxzw, l(0.050000, 0.000000, 0.050000, 0.050000)
    add r4.xzw, r4.xxzw, r7.xxyz  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.xyz, r8.xyzx, r4.xzwx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    ieq r3.z, r3.z, l(3)
    if_nz r3.z
      mul r6.xyzw, r10.xyzw, r12.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r3.z, r0.y, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r3.z, r3.z, l(0.800000)
      lt r3.w, l(2.000000), r0.z
      and r3.z, r3.w, r3.z
      if_nz r3.z
        mov r10.xyz, r9.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 
        mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 769
    else 
      mov r6.w, r10.w  // f4ColorOut<3:Inf>
    endif 

#line 730
  endif 
  mov r10.w, r6.w  // f4ColorOut<3:Inf>
  if_nz r4.y
    mov r4.xyzw, v27.xyzw  // alLight<18,19,20,21>
    mov r7.xyz, v23.yzwy  // alLight<1,2,3>
    mov r8.xyz, v24.xyzx  // alLight<4,5,6>
    mov r3.z, v26.w  // alLight<17>

#line 735
    dp3 r3.w, r7.xyzx, r7.xyzx
    rsq r3.w, r3.w
    mul r7.xyz, r3.wwww, r7.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r4.xyzw, r4.xyzw  // f4LightPos<0,1,2,3>
    mov r8.xyz, r8.xyzx  // f4LightCol<0,1,2>
    mov r9.xyzw, -v6.xyzw
    add r4.xyzw, r4.xyzw, r9.xyzw
    dp4 r3.w, r4.xyzw, r4.xyzw
    sqrt r3.w, r3.w
    div r3.w, l(1.000000), r3.w
    mul r3.w, r3.w, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r4.x, r3.w, l(1.000000)
    if_nz r4.x
      mov r3.w, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 747
    nop 
    mov r7.xyz, r7.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r4.x, r7.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.x, r4.x  // HalfLambert<0:NaN:Inf>

#line 747
    mul r4.xyz, r3.wwww, r4.xxxx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r9.xyz, -r14.xyzx
    dp3 r4.w, r9.xyzx, r7.xyzx
    max r4.w, r4.w, l(0.000000)
    mul r9.xyz, r0.zzzz, r4.wwww  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r11.xyz, -r1.yzwy  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 260
    dp3 r4.w, r11.xyzx, r7.xyzx  // fProduct<0:NaN:Inf>
    mul r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.w, r4.w  // HalfLambert<0:NaN:Inf>

#line 750
    mul r4.w, r0.z, r4.w
    add r9.xyz, r4.wwww, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r9.xyz, r3.wwww, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.x, r1.x, r9.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r11.y, r2.w, r9.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r11.z, r3.x, r9.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r9.xyz, r3.yyyy, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.x, r14.xyzx, r1.yzwy
    max r1.x, r1.x, l(0.000000)
    mov r1.x, -r1.x
    add r1.xyz, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r1.xyz, r1.xyzx, r1.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.w, r14.xyzx, r7.xyzx
    max r1.w, r1.w, l(0.000000)
    mul r11.xyz, r2.xyzx, r1.wwww
    mul r1.xyz, r1.xyzx, r11.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 761
    mul r4.xyz, r5.yzwy, r4.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r4.xyz, r9.xyzx, r4.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r5.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r1.xyz, r0.wwww, r1.xyzx
    mul r1.xyz, r3.wwww, r1.xyzx
    mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r1.xyz, r1.xyzx, r4.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 268
    add r4.xyz, r7.xyzx, r14.xyzx
    dp3 r0.w, r4.xyzx, r4.xyzx
    rsq r0.w, r0.w
    mul r4.xyz, r0.wwww, r4.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r0.w, r14.xyzx, r4.xyzx
    max r0.w, r0.w, l(0.000000)
    min r0.w, r0.w, l(1.000000)
    mul r0.w, r0.w, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 766
    mul r0.w, r3.w, r0.w
    mul r2.xyz, r2.xyzx, r0.wwww
    mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r1.xyz, r1.xyzx, r2.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r5.xyz, r8.xyzx, r1.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    ieq r0.w, r3.z, l(3)
    if_nz r0.w
      mul r6.xyzw, r5.xyzw, r10.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r0.w, r0.y, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r0.w, r0.w, l(0.800000)
      lt r0.z, l(2.000000), r0.z
      and r0.z, r0.z, r0.w
      if_nz r0.z
        mov r6.xyz, r9.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 769
    else 
      mov r6.xyz, r10.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mov r6.w, r10.w  // f4ColorOut<3:Inf>
    endif 

#line 730
  else 
    mov r6.xyz, r10.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  endif 

#line 713
endif 

#line 780
ine r0.z, l(0, 0, 0, 0), cb2[6].y
if_nz r0.z
  mul r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3>
endif 

#line 784
ine r0.z, l(0, 0, 0, 0), cb2[6].w
if_nz r0.z
  max r0.y, r0.y, l(0.000000)  // fEdge<0:NaN:Inf>
  lt r0.y, r0.y, cb2[0].w
  if_nz r0.y
    mov r6.xyz, cb2[0].xyzx  // f4ColorOut<0,1,2>
  endif 

#line 784
endif 

#line 791
ine r0.y, l(0, 0, 0, 0), cb2[7].z
if_nz r0.y
  sqrt r0.x, r0.x
  div r0.x, r0.x, cb2[1].w
  add r6.xyz, r0.xxxx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 796
ine r0.x, l(0, 0, 0, 0), cb2[6].x
if_nz r0.x
  dp4 r0.x, r6.xyzw, cb2[2].xyzw  // f4ColorOut<0:NaN:Inf>
  dp4 r0.y, r6.xyzw, cb2[3].xyzw  // f4ColorOut<1:NaN:Inf>
  dp4 r0.z, r6.xyzw, cb2[4].xyzw  // f4ColorOut<2:NaN:Inf>
  dp4 r0.w, r6.xyzw, cb2[5].xyzw  // f4ColorOut<3:NaN:Inf>
  mov r6.xyzw, r0.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
endif 

#line 806
mov o0.xyzw, r6.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
ret 
// Approximately 2688 instruction slots used
