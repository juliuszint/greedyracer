//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer ObjectInfo
// {
//
//   float4x4 World;                    // Offset:    0 Size:    64
//   float4x4 View;                     // Offset:   64 Size:    64
//   float4x4 ViewInv;                  // Offset:  128 Size:    64
//   float4x4 Projection;               // Offset:  192 Size:    64
//   uint4 iLightsAffecting;            // Offset:  256 Size:    16
//   uint iLightCount;                  // Offset:  272 Size:     4
//
// }
//
// Resource bind info for Lights
// {
//
//   struct Light
//   {
//       
//       float3 f3Position;             // Offset:    0
//       uint iType;                    // Offset:   12
//       float4 f4Color;                // Offset:   16
//       float3 f3Direction;            // Offset:   32
//       float fInnerCosAngle;          // Offset:   44
//       float fOuterCosAngle;          // Offset:   48
//       float fAttenuationConstant;    // Offset:   52
//       float fAttenuationLinear;      // Offset:   56
//       float fAttenuationQuadratic;   // Offset:   60
//       bool bCauseShadow;             // Offset:   64
//       bool bSoftShadow;              // Offset:   68
//       bool bCascadedShadow;          // Offset:   72
//       float4x4 mLightViewProj;       // Offset:   76
//
//   } $Element;                        // Offset:    0 Size:   140
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Lights                            texture  struct         r/o   10        1
// ObjectInfo                        cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// POSITION                 0   xyzw        0     NONE  float   xyzw
// NORMAL                   0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xy          2     NONE  float   xy  
// TANGENT                  0   xyz         3     NONE  float   xyz 
// BITANGENT                0   xyz         4     NONE  float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float   xyzw
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float      w
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float      w
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     zw
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float      w
// TEXCOORD                 2   xyzw        6     NONE  float   xyzw
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyzw
// LIGHTS                   3   xyzw        9     NONE  float   xyzw
// LIGHTS                   6   xyzw       10     NONE   uint   xyzw
// LIGHTS                  10   xyzw       11     NONE   uint   xyzw
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float   xyzw
// LIGHTS                  14   xyzw       14     NONE  float   xyzw
// LIGHTS                  15   xyzw       15     NONE  float   xyzw
// LIGHTS                  21   xyzw       16     NONE   uint   xyzw
// LIGHTS                  23   xyzw       17     NONE  float   xyzw
// LIGHTS                  24   xyzw       18     NONE  float   xyzw
// LIGHTS                  26   xyzw       19     NONE  float   xyzw
// LIGHTS                  27   xyz        20     NONE  float   xyz 
// LIGHTS                  32   xyzw       21     NONE   uint   xyzw
// LIGHTS                  35   xyzw       22     NONE  float   xyzw
// LIGHTS                  36   xyzw       23     NONE  float   xyzw
// LIGHTS                  38   xyzw       24     NONE  float   xyzw
// LIGHTS                  39   xyz        25     NONE  float   xyz 
// LIGHTS                  43   xyzw       26     NONE   uint   xyzw
// LIGHTS                  47   xyzw       27     NONE  float   xyzw
// COUNT                    0   x          28     NONE   uint   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[18], immediateIndexed
dcl_resource_structured t10, 140 
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyz
dcl_input v4.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o3.w
dcl_output o4.xy
dcl_output o4.zw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_output o12.xyzw
dcl_output o13.xyzw
dcl_output o14.xyzw
dcl_output o15.xyzw
dcl_output o16.xyzw
dcl_output o17.xyzw
dcl_output o18.xyzw
dcl_output o19.xyzw
dcl_output o20.xyz
dcl_output o21.xyzw
dcl_output o22.xyzw
dcl_output o23.xyzw
dcl_output o24.xyzw
dcl_output o25.xyz
dcl_output o26.xyzw
dcl_output o27.xyzw
dcl_output o28.x
dcl_temps 25
dp4 r0.x, v0.xyzw, cb0[0].xyzw
dp4 r0.y, v0.xyzw, cb0[1].xyzw
dp4 r0.z, v0.xyzw, cb0[2].xyzw
dp4 r0.w, v0.xyzw, cb0[3].xyzw
ult r1.xyz, l(1, 2, 3, 0), cb0[17].xxxx
if_nz cb0[17].x
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r2.xyzw, cb0[16].x, l(0), t10.wxyz
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) o8.xyzw, cb0[16].x, l(16), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r3.xyzw, cb0[16].x, l(32), t10.wxyz
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r4.xyzw, cb0[16].x, l(48), t10.yzwx
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r5.xyzw, cb0[16].x, l(64), t10.xyzw
  ine r6.xyz, r5.xyzx, l(0, 0, 0, 0)
  ieq r1.w, r2.x, l(3)
  if_nz r1.w
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r5.xyz, cb0[16].x, l(80), t10.xyzx
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r7.xyzw, cb0[16].x, l(92), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r8.xyzw, cb0[16].x, l(108), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r9.xyzw, cb0[16].x, l(124), t10.xyzw
    add r10.xyz, -r0.xyzx, r2.yzwy
    dp3 r1.w, r10.xyzx, r10.xyzx
    rsq r10.w, r1.w
    mul o7.yzw, r10.wwww, r10.xxyz
    sqrt r1.w, r1.w
    add r10.x, r4.x, l(1.000000)
    mad r10.x, r4.y, r1.w, r10.x
    max r1.w, r1.w, l(1.000000)
    mul r1.w, r1.w, r1.w
    mad r1.w, r4.z, r1.w, r10.x
    div o7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    mul r10.xyzw, r5.xxxx, cb0[1].xyzw
    mad r10.xyzw, cb0[0].xyzw, r5.wwww, r10.xyzw
    mad r10.xyzw, cb0[2].xyzw, r5.yyyy, r10.xyzw
    mad r5.xyzw, cb0[3].xyzw, r5.zzzz, r10.xyzw
    mul r10.xyzw, r7.yyyy, cb0[1].xyzw
    mad r10.xyzw, cb0[0].xyzw, r7.xxxx, r10.xyzw
    mad r10.xyzw, cb0[2].xyzw, r7.zzzz, r10.xyzw
    mad r7.xyzw, cb0[3].xyzw, r7.wwww, r10.xyzw
    mul r10.xyzw, r8.yyyy, cb0[1].xyzw
    mad r10.xyzw, cb0[0].xyzw, r8.xxxx, r10.xyzw
    mad r10.xyzw, cb0[2].xyzw, r8.zzzz, r10.xyzw
    mad r8.xyzw, cb0[3].xyzw, r8.wwww, r10.xyzw
    mul r10.xyzw, r9.yyyy, cb0[1].xyzw
    mad r10.xyzw, cb0[0].xyzw, r9.xxxx, r10.xyzw
    mad r10.xyzw, cb0[2].xyzw, r9.zzzz, r10.xyzw
    mad r9.xyzw, cb0[3].xyzw, r9.wwww, r10.xyzw
    dp4 r5.x, v0.xyzw, r5.xyzw
    dp4 r5.y, v0.xyzw, r7.xyzw
    dp4 r5.z, v0.xyzw, r8.xyzw
    dp4 r5.w, v0.xyzw, r9.xyzw
    mov r7.xyz, r3.yzwy
  else 
    ieq r1.w, r2.x, l(2)
    add r8.xyz, -r0.xyzx, r2.yzwy
    dp3 r8.w, r8.xyzx, r8.xyzx
    rsq r9.x, r8.w
    mul r9.yzw, r8.xxyz, r9.xxxx
    sqrt r8.x, r8.w
    add r8.y, r4.x, l(1.000000)
    mad r8.y, r4.y, r8.x, r8.y
    max r8.x, r8.x, l(1.000000)
    mul r8.x, r8.x, r8.x
    mad r8.x, r4.z, r8.x, r8.y
    div r9.x, l(1.000000, 1.000000, 1.000000, 1.000000), r8.x
    mov r3.x, l(1.000000)
    movc o7.xyzw, r1.wwww, r9.xyzw, r3.xyzw
    mov r7.xyz, l(0,0,0,0)
    mov r3.x, l(0)
    mov r6.yz, l(0,0,0,0)
    mov r4.w, l(0)
    mov r5.xyzw, l(0,0,0,0)
  endif 
  mov r6.w, cb0[16].x
else 
  mov o7.xyzw, l(0,0,0,0)
  mov o8.xyzw, l(0,0,0,0)
  mov r7.xyz, l(0,0,0,0)
  mov r3.x, l(0)
  mov r4.w, l(0)
  mov r6.xyzw, l(0,0,0,0)
  mov r2.x, l(0)
  mov r5.xyzw, l(0,0,0,0)
endif 
if_nz r1.x
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r8.xyzw, cb0[16].y, l(0), t10.xwyz
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) o14.xyzw, cb0[16].y, l(16), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r9.xyzw, cb0[16].y, l(32), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r10.xyzw, cb0[16].y, l(48), t10.yzwx
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r11.xyzw, cb0[16].y, l(64), t10.xyzw
  ine r2.yzw, r11.xxyz, l(0, 0, 0, 0)
  ieq r1.x, r8.y, l(3)
  if_nz r1.x
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r11.xyz, cb0[16].y, l(80), t10.xyzx
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r12.xyzw, cb0[16].y, l(92), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r13.xyzw, cb0[16].y, l(108), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r14.xyzw, cb0[16].y, l(124), t10.xyzw
    add r15.xyz, -r0.xyzx, r8.xzwx
    dp3 r1.x, r15.xyzx, r15.xyzx
    rsq r1.w, r1.x
    mul o13.yzw, r1.wwww, r15.xxyz
    sqrt r1.x, r1.x
    add r1.w, r10.x, l(1.000000)
    mad r1.w, r10.y, r1.x, r1.w
    max r1.x, r1.x, l(1.000000)
    mul r1.x, r1.x, r1.x
    mad r1.x, r10.z, r1.x, r1.w
    div o13.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
    mul r15.xyzw, r11.xxxx, cb0[1].xyzw
    mad r15.xyzw, cb0[0].xyzw, r11.wwww, r15.xyzw
    mad r15.xyzw, cb0[2].xyzw, r11.yyyy, r15.xyzw
    mad r11.xyzw, cb0[3].xyzw, r11.zzzz, r15.xyzw
    mul r15.xyzw, r12.yyyy, cb0[1].xyzw
    mad r15.xyzw, cb0[0].xyzw, r12.xxxx, r15.xyzw
    mad r15.xyzw, cb0[2].xyzw, r12.zzzz, r15.xyzw
    mad r12.xyzw, cb0[3].xyzw, r12.wwww, r15.xyzw
    mul r15.xyzw, r13.yyyy, cb0[1].xyzw
    mad r15.xyzw, cb0[0].xyzw, r13.xxxx, r15.xyzw
    mad r15.xyzw, cb0[2].xyzw, r13.zzzz, r15.xyzw
    mad r13.xyzw, cb0[3].xyzw, r13.wwww, r15.xyzw
    mul r15.xyzw, r14.yyyy, cb0[1].xyzw
    mad r15.xyzw, cb0[0].xyzw, r14.xxxx, r15.xyzw
    mad r15.xyzw, cb0[2].xyzw, r14.zzzz, r15.xyzw
    mad r14.xyzw, cb0[3].xyzw, r14.wwww, r15.xyzw
    dp4 r11.x, v0.xyzw, r11.xyzw
    dp4 r11.y, v0.xyzw, r12.xyzw
    dp4 r11.z, v0.xyzw, r13.xyzw
    dp4 r11.w, v0.xyzw, r14.xyzw
    mov r12.xyz, r9.xyzx
  else 
    ieq r1.x, r8.y, l(2)
    add r13.xyz, -r0.xyzx, r8.xzwx
    dp3 r1.w, r13.xyzx, r13.xyzx
    rsq r13.w, r1.w
    mul r13.yzw, r13.wwww, r13.xxyz
    sqrt r1.w, r1.w
    add r14.x, r10.x, l(1.000000)
    mad r14.x, r10.y, r1.w, r14.x
    max r1.w, r1.w, l(1.000000)
    mul r1.w, r1.w, r1.w
    mad r1.w, r10.z, r1.w, r14.x
    div r13.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    mov r9.w, l(1.000000)
    movc o13.xyzw, r1.xxxx, r13.xyzw, r9.wxyz
    mov r12.xyz, l(0,0,0,0)
    mov r9.w, l(0)
    mov r2.zw, l(0,0,0,0)
    mov r10.w, l(0)
    mov r11.xyzw, l(0,0,0,0)
  endif 
  mov r8.x, cb0[16].y
else 
  mov o13.xyzw, l(0,0,0,0)
  mov o14.xyzw, l(0,0,0,0)
  mov r12.xyz, l(0,0,0,0)
  mov r9.w, l(0)
  mov r2.yzw, l(0,0,0,0)
  mov r10.w, l(0)
  mov r8.xy, l(0,0,0,0)
  mov r11.xyzw, l(0,0,0,0)
endif 
if_nz r1.y
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r13.xyzw, cb0[16].z, l(0), t10.yxwz
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) o19.xyzw, cb0[16].z, l(16), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r14.xyzw, cb0[16].z, l(32), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r15.xyzw, cb0[16].z, l(48), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r16.xyzw, cb0[16].z, l(64), t10.xyzw
  ine r17.xyz, r16.xyzx, l(0, 0, 0, 0)
  ieq r1.x, r13.z, l(3)
  if_nz r1.x
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r1.xyw, cb0[16].z, l(80), t10.xyxz
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r18.xyzw, cb0[16].z, l(92), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r19.xyzw, cb0[16].z, l(108), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r20.xyzw, cb0[16].z, l(124), t10.xyzw
    add r16.xyz, -r0.xyzx, r13.yxwy
    dp3 r21.x, r16.xyzx, r16.xyzx
    rsq r21.y, r21.x
    mul o18.yzw, r16.xxyz, r21.yyyy
    sqrt r16.x, r21.x
    add r16.y, r15.y, l(1.000000)
    mad r16.y, r15.z, r16.x, r16.y
    max r16.x, r16.x, l(1.000000)
    mul r16.x, r16.x, r16.x
    mad r16.x, r15.w, r16.x, r16.y
    div o18.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
    mul r21.xyzw, r1.xxxx, cb0[1].xyzw
    mad r16.xyzw, cb0[0].xyzw, r16.wwww, r21.xyzw
    mad r16.xyzw, cb0[2].xyzw, r1.yyyy, r16.xyzw
    mad r16.xyzw, cb0[3].xyzw, r1.wwww, r16.xyzw
    mul r21.xyzw, r18.yyyy, cb0[1].xyzw
    mad r21.xyzw, cb0[0].xyzw, r18.xxxx, r21.xyzw
    mad r21.xyzw, cb0[2].xyzw, r18.zzzz, r21.xyzw
    mad r18.xyzw, cb0[3].xyzw, r18.wwww, r21.xyzw
    mul r21.xyzw, r19.yyyy, cb0[1].xyzw
    mad r21.xyzw, cb0[0].xyzw, r19.xxxx, r21.xyzw
    mad r21.xyzw, cb0[2].xyzw, r19.zzzz, r21.xyzw
    mad r19.xyzw, cb0[3].xyzw, r19.wwww, r21.xyzw
    mul r21.xyzw, r20.yyyy, cb0[1].xyzw
    mad r21.xyzw, cb0[0].xyzw, r20.xxxx, r21.xyzw
    mad r21.xyzw, cb0[2].xyzw, r20.zzzz, r21.xyzw
    mad r20.xyzw, cb0[3].xyzw, r20.wwww, r21.xyzw
    dp4 r16.x, v0.xyzw, r16.xyzw
    dp4 r16.y, v0.xyzw, r18.xyzw
    dp4 r16.z, v0.xyzw, r19.xyzw
    dp4 r16.w, v0.xyzw, r20.xyzw
    mov r3.y, r14.w
    mov r17.w, r17.y
    mov r13.x, r17.z
  else 
    ieq r1.x, r13.z, l(2)
    add r18.xyz, -r0.xyzx, r13.yxwy
    dp3 r1.y, r18.xyzx, r18.xyzx
    rsq r1.w, r1.y
    mul r18.yzw, r1.wwww, r18.xxyz
    sqrt r1.y, r1.y
    add r1.w, r15.y, l(1.000000)
    mad r1.w, r15.z, r1.y, r1.w
    max r1.y, r1.y, l(1.000000)
    mul r1.y, r1.y, r1.y
    mad r1.y, r15.w, r1.y, r1.w
    div r18.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
    mov r14.w, l(1.000000)
    movc o18.xyzw, r1.xxxx, r18.xyzw, r14.wxyz
    mov r14.xyz, l(0,0,0,0)
    mov r3.y, l(0)
    mov r15.x, l(0)
    mov r17.w, l(0)
    mov r13.x, l(0)
    mov r16.xyzw, l(0,0,0,0)
  endif 
  mov r8.zw, r17.xxxw
  mov r13.y, cb0[16].z
else 
  mov o18.xyzw, l(0,0,0,0)
  mov o19.xyzw, l(0,0,0,0)
  mov r14.xyz, l(0,0,0,0)
  mov r3.y, l(0)
  mov r8.zw, l(0,0,0,0)
  mov r15.x, l(0)
  mov r13.xyz, l(0,0,0,0)
  mov r16.xyzw, l(0,0,0,0)
endif 
if_nz r1.z
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r1.xyzw, cb0[16].w, l(0), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) o24.xyzw, cb0[16].w, l(16), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r17.xyzw, cb0[16].w, l(32), t10.wxyz
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r18.xyzw, cb0[16].w, l(48), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r19.xyzw, cb0[16].w, l(64), t10.xyzw
  ine r19.xyz, r19.xyzx, l(0, 0, 0, 0)
  ieq r14.w, r1.w, l(3)
  if_nz r14.w
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r20.xyz, cb0[16].w, l(80), t10.xyzx
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r21.xyzw, cb0[16].w, l(92), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r22.xyzw, cb0[16].w, l(108), t10.xyzw
    ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r23.xyzw, cb0[16].w, l(124), t10.xyzw
    add r24.xyz, -r0.xyzx, r1.xyzx
    dp3 r14.w, r24.xyzx, r24.xyzx
    rsq r20.w, r14.w
    mul o23.yzw, r20.wwww, r24.xxyz
    sqrt r14.w, r14.w
    add r20.w, r18.y, l(1.000000)
    mad r20.w, r18.z, r14.w, r20.w
    max r14.w, r14.w, l(1.000000)
    mul r14.w, r14.w, r14.w
    mad r14.w, r18.w, r14.w, r20.w
    div o23.x, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
    mul r24.xyzw, r20.xxxx, cb0[1].xyzw
    mad r24.xyzw, cb0[0].xyzw, r19.wwww, r24.xyzw
    mad r24.xyzw, cb0[2].xyzw, r20.yyyy, r24.xyzw
    mad r20.xyzw, cb0[3].xyzw, r20.zzzz, r24.xyzw
    mul r24.xyzw, r21.yyyy, cb0[1].xyzw
    mad r24.xyzw, cb0[0].xyzw, r21.xxxx, r24.xyzw
    mad r24.xyzw, cb0[2].xyzw, r21.zzzz, r24.xyzw
    mad r21.xyzw, cb0[3].xyzw, r21.wwww, r24.xyzw
    mul r24.xyzw, r22.yyyy, cb0[1].xyzw
    mad r24.xyzw, cb0[0].xyzw, r22.xxxx, r24.xyzw
    mad r24.xyzw, cb0[2].xyzw, r22.zzzz, r24.xyzw
    mad r22.xyzw, cb0[3].xyzw, r22.wwww, r24.xyzw
    mul r24.xyzw, r23.yyyy, cb0[1].xyzw
    mad r24.xyzw, cb0[0].xyzw, r23.xxxx, r24.xyzw
    mad r24.xyzw, cb0[2].xyzw, r23.zzzz, r24.xyzw
    mad r23.xyzw, cb0[3].xyzw, r23.wwww, r24.xyzw
    dp4 o27.x, v0.xyzw, r20.xyzw
    dp4 o27.y, v0.xyzw, r21.xyzw
    dp4 o27.z, v0.xyzw, r22.xyzw
    dp4 o27.w, v0.xyzw, r23.xyzw
    mov o25.xyz, r17.yzwy
    mov r1.xy, r19.yzyy
    mov r7.w, r17.x
    mov r12.w, r18.x
  else 
    ieq r14.w, r1.w, l(2)
    add r19.yzw, -r0.xxyz, r1.xxyz
    dp3 r18.x, r19.yzwy, r19.yzwy
    rsq r20.x, r18.x
    mul r20.yzw, r19.yyzw, r20.xxxx
    sqrt r18.x, r18.x
    add r18.y, r18.y, l(1.000000)
    mad r18.y, r18.z, r18.x, r18.y
    max r18.x, r18.x, l(1.000000)
    mul r18.x, r18.x, r18.x
    mad r18.x, r18.w, r18.x, r18.y
    div r20.x, l(1.000000, 1.000000, 1.000000, 1.000000), r18.x
    mov r17.x, l(1.000000)
    movc o23.xyzw, r14.wwww, r20.xyzw, r17.xyzw
    mov o27.xyzw, l(0,0,0,0)
    mov o25.xyz, l(0,0,0,0)
    mov r1.xy, l(0,0,0,0)
    mov r7.w, l(0)
    mov r12.w, l(0)
  endif 
  mov r1.z, cb0[16].w
  mov o26.xyzw, r1.xyzw
  mov r13.w, r19.x
else 
  mov o23.xyzw, l(0,0,0,0)
  mov o24.xyzw, l(0,0,0,0)
  mov o26.xyzw, l(0,0,0,0)
  mov o27.xyzw, l(0,0,0,0)
  mov o25.xyz, l(0,0,0,0)
  mov r7.w, l(0)
  mov r12.w, l(0)
  mov r13.w, l(0)
endif 
mul r1.xyzw, cb0[5].xyzw, cb0[12].yyyy
mad r1.xyzw, cb0[4].xyzw, cb0[12].xxxx, r1.xyzw
mad r1.xyzw, cb0[6].xyzw, cb0[12].zzzz, r1.xyzw
mad r1.xyzw, cb0[7].xyzw, cb0[12].wwww, r1.xyzw
mul r17.xyzw, cb0[5].xyzw, cb0[13].yyyy
mad r17.xyzw, cb0[4].xyzw, cb0[13].xxxx, r17.xyzw
mad r17.xyzw, cb0[6].xyzw, cb0[13].zzzz, r17.xyzw
mad r17.xyzw, cb0[7].xyzw, cb0[13].wwww, r17.xyzw
mul r18.xyzw, cb0[5].xyzw, cb0[14].yyyy
mad r18.xyzw, cb0[4].xyzw, cb0[14].xxxx, r18.xyzw
mad r18.xyzw, cb0[6].xyzw, cb0[14].zzzz, r18.xyzw
mad r18.xyzw, cb0[7].xyzw, cb0[14].wwww, r18.xyzw
mul r19.xyzw, cb0[5].xyzw, cb0[15].yyyy
mad r19.xyzw, cb0[4].xyzw, cb0[15].xxxx, r19.xyzw
mad r19.xyzw, cb0[6].xyzw, cb0[15].zzzz, r19.xyzw
mad r19.xyzw, cb0[7].xyzw, cb0[15].wwww, r19.xyzw
dp4 o0.x, r0.xyzw, r1.xyzw
dp4 o0.y, r0.xyzw, r17.xyzw
dp4 o0.z, r0.xyzw, r18.xyzw
dp4 o0.w, r0.xyzw, r19.xyzw
dp3 r1.x, v1.xyzx, cb0[0].xyzx
dp3 r1.y, v1.xyzx, cb0[1].xyzx
dp3 r1.z, v1.xyzx, cb0[2].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r1.xyzx
dp3 r1.x, v3.xyzx, cb0[0].xyzx
dp3 r1.y, v3.xyzx, cb0[1].xyzx
dp3 r1.z, v3.xyzx, cb0[2].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r9.xyz, r1.wwww, r1.xyzx
dp3 r1.x, v4.xyzx, cb0[0].xyzx
dp3 r1.y, v4.xyzx, cb0[1].xyzx
dp3 r1.z, v4.xyzx, cb0[2].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, r1.xyzx
mov o1.xyzw, r4.xyzw
mov o2.xyzw, r9.xyzw
mov o3.xyzw, r10.xyzw
mov r3.zw, v2.xxxy
mov o4.xyzw, r3.zwxy
mov r15.y, cb0[8].w
mov r15.z, cb0[9].w
mov r15.w, cb0[10].w
mov o5.xyzw, r15.yzwx
mov o6.xyzw, r0.xyzw
mov o9.xyzw, r7.xyzw
mov o10.xyzw, r6.xyzw
mov o11.xyzw, r2.xyzw
mov o12.xyzw, r5.xyzw
mov o15.xyzw, r12.xyzw
mov o16.xyzw, r8.xyzw
mov o17.xyzw, r11.xyzw
mov o21.xyzw, r13.xyzw
mov o22.xyzw, r16.xyzw
mov o20.xyz, r14.xyzx
mov o28.x, cb0[17].x
ret 
// Approximately 382 instruction slots used
