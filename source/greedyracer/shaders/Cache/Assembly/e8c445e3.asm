//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mView;                  // Offset:    0 Size:    64 [unused]
//   float4x4 g_mViewInv;               // Offset:   64 Size:    64 [unused]
//   float4x4 g_mProjection;            // Offset:  128 Size:    64 [unused]
//   float4x4 g_mProjectionInv;         // Offset:  192 Size:    64
//   float4x4 g_mProjectionInvViewport; // Offset:  256 Size:    64 [unused]
//   float4 g_f4AmbientColorUp;         // Offset:  320 Size:    16
//   float4 g_f4AmbientColorDown;       // Offset:  336 Size:    16
//   float3 g_f3CameraPos;              // Offset:  352 Size:    12
//   float g_fAlphaTest;                // Offset:  364 Size:     4 [unused]
//   uint g_uNumLights;                 // Offset:  368 Size:     4 [unused]
//   uint g_uNumSpotLights;             // Offset:  372 Size:     4 [unused]
//   uint g_uWindowWidth;               // Offset:  376 Size:     4 [unused]
//   uint g_uWindowHeight;              // Offset:  380 Size:     4 [unused]
//   uint g_uMaxNumLightsPerTile;       // Offset:  384 Size:     4
//   uint g_uMaxNumElementsPerTile;     // Offset:  388 Size:     4
//   uint g_uNumTilesX;                 // Offset:  392 Size:     4
//   uint g_uNumTilesY;                 // Offset:  396 Size:     4 [unused]
//   uint g_uMaxVPLs;                   // Offset:  400 Size:     4 [unused]
//   uint g_uMaxNumVPLsPerTile;         // Offset:  404 Size:     4 [unused]
//   uint g_uMaxNumVPLElementsPerTile;  // Offset:  408 Size:     4 [unused]
//   float g_fVPLSpotStrength;          // Offset:  412 Size:     4 [unused]
//   float g_fVPLSpotRadius;            // Offset:  416 Size:     4 [unused]
//   float g_fVPLPointStrength;         // Offset:  420 Size:     4 [unused]
//   float g_fVPLPointRadius;           // Offset:  424 Size:     4 [unused]
//   float g_fVPLRemoveBackFaceContrib; // Offset:  428 Size:     4 [unused]
//   float g_fVPLColorThreshold;        // Offset:  432 Size:     4 [unused]
//   float g_fVPLBrightnessThreshold;   // Offset:  436 Size:     4 [unused]
//   float g_fPerFramePad1;             // Offset:  440 Size:     4 [unused]
//   float g_fPerFramePad2;             // Offset:  444 Size:     4 [unused]
//
// }
//
// cbuffer cbShadowConstants
// {
//
//   float4x4 g_mPointShadowViewProj[72];// Offset:    0 Size:  4608
//   float4x4 g_mSpotShadowViewProj[12];// Offset: 4608 Size:   768
//   float4 g_f4ShadowBias;             // Offset: 5376 Size:    16
//
// }
//
// cbuffer TexInfo
// {
//
//   float4 f4ColorAmbient;             // Offset:    0 Size:    16 [unused]
//   float fA;                          // Offset:   16 Size:     4 [unused]
//   float fH;                          // Offset:   20 Size:     4
//   float fBumpStrength;               // Offset:   24 Size:     4
//   float frTransparency;              // Offset:   28 Size:     4
//   float4 f4ColorSSS;                 // Offset:   32 Size:    16
//   float4 f4SSSBRDFParams;            // Offset:   48 Size:    16
//   uint uImage;                       // Offset:   64 Size:     4 [unused]
//   uint uGlow;                        // Offset:   68 Size:     4 [unused]
//   uint uSpecular;                    // Offset:   72 Size:     4
//   uint uBump;                        // Offset:   76 Size:     4
//   uint uImageBlack;                  // Offset:   80 Size:     4 [unused]
//   uint uGlowAsImage;                 // Offset:   84 Size:     4 [unused]
//   uint uSpecularAsImage;             // Offset:   88 Size:     4
//   uint uHeightAsImage;               // Offset:   92 Size:     4 [unused]
//   uint uImageWhite;                  // Offset:   96 Size:     4 [unused]
//   uint uGlowWhite;                   // Offset:  100 Size:     4 [unused]
//   uint uSpecularWhite;               // Offset:  104 Size:     4
//   uint uHeight;                      // Offset:  108 Size:     4 [unused]
//   uint uShadingOn;                   // Offset:  112 Size:     4 [unused]
//   uint uGlowAsAmbient;               // Offset:  116 Size:     4 [unused]
//   uint uChromaKeying;                // Offset:  120 Size:     4
//   uint uEnvironment;                 // Offset:  124 Size:     4
//   uint uPOM;                         // Offset:  128 Size:     4 [unused]
//   uint uTexBRDF;                     // Offset:  132 Size:     4 [unused]
//   uint uTexSSS;                      // Offset:  136 Size:     4
//   uint uReflectionMap;               // Offset:  140 Size:     4
//   uint uixPos;                       // Offset:  144 Size:     4
//   uint uiyPos;                       // Offset:  148 Size:     4
//   uint uixPics;                      // Offset:  152 Size:     4
//   uint uiyPics;                      // Offset:  156 Size:     4
//   float fSpecularRoughness;          // Offset:  160 Size:     4
//   float fSpecularIOR;                // Offset:  164 Size:     4
//   uint uPad1;                        // Offset:  168 Size:     4 [unused]
//   uint uPad2;                        // Offset:  172 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_Sampler                         sampler      NA          NA    0        1
// g_ShadowSampler                 sampler_c      NA          NA    1        1
// g_pointLightCenterAndRadiusBuffer    texture  float4         buf    2        1
// g_pointLightColorBuffer           texture  float4         buf    3        1
// g_perTilePointLightIndexBuffer    texture    uint         buf    4        1
// g_spotLightCenterAndRadiusBuffer    texture  float4         buf    5        1
// g_spotLightColorBuffer            texture  float4         buf    6        1
// g_spotLightParamsBuffer           texture  float4         buf    7        1
// g_perTileSpotLightIndexBuffer     texture    uint         buf    8        1
// g_PointShadowAtlas                texture  float4          2d   13        1
// g_SpotShadowAtlas                 texture  float4          2d   14        1
// tex2D[0]                          texture  float4          2d   15        1
// tex2D[3]                          texture  float4          2d   18        1
// tex2D[4]                          texture  float4          2d   19        1
// tex2D[6]                          texture  float4          2d   21        1
// cbPerFrame                        cbuffer      NA          NA    2        1
// cbShadowConstants                 cbuffer      NA          NA    3        1
// TexInfo                           cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float   xyz 
// NORMAL                   0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xyz         2     NONE  float   xyz 
// TEXCOORD                 1   xy          3     NONE  float   xy  
// TANGENT                  0   xyz         4     NONE  float       
// BITANGENT                0   xyz         5     NONE  float       
// TEXCOORD                 2   xyz         6     NONE  float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_TARGET                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[25], immediateIndexed
dcl_constantbuffer cb3[337], dynamicIndexed
dcl_constantbuffer cb5[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (float,float,float,float) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 33

#line 225 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
mov r0.xyz, v2.xyzx  // f3VertexPos<0,1,2>
mov r1.xyz, l(0,0,0,0)  // f3AccumDiffuseFront<0: -0f,1: -0f,2: -0f>

#line 232
ult r0.w, l(1), cb5[9].y
ult r1.w, l(1), cb5[9].w
or r0.w, r0.w, r1.w
if_nz r0.w
  utof r0.w, cb5[9].x  // fxPic<0:[0f,4.29497e+009f]>
  utof r1.w, cb5[9].y  // fyPic<0:[0f,4.29497e+009f]>
  utof r2.x, cb5[9].z  // fxPics<0:[0f,4.29497e+009f]>
  utof r2.y, cb5[9].w  // fyPics<0:[0f,4.29497e+009f]>
  div r0.w, r0.w, r2.x
  div r2.x, l(1.000000), r2.x
  mul r2.x, r2.x, v3.x
  add r3.x, r0.w, r2.x  // input<10:NaN:Inf>
  div r0.w, r1.w, r2.y
  div r1.w, l(1.000000), r2.y
  mul r1.w, r1.w, v3.y
  add r3.y, r0.w, r1.w  // input<11:NaN:Inf>

#line 232
else 
  mov r3.xy, v3.xyxx  // input<10,11>
endif 

#line 244
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r3.xyxx, t18.xyzw, s0
mov r2.xyz, r2.xyzx  // f3Norm<0:Inf,1:Inf,2:Inf>
mul r4.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // f3Norm<0:Inf,1:Inf,2:Inf>
add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // f3Norm<0:Inf,1:Inf,2:Inf>
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, v1.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r6.xyz, r5.zxyz  // f3N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>

#line 254
ine r0.w, l(0, 0, 0, 0), cb5[4].z
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r3.xyxx, t15.xyzw, s0  // f4SpecMapCol<0:Inf,1:Inf,2:Inf,3:Inf>
else 
  mov r7.xyz, l(0,0,0,0)  // f4SpecMapCol<0: 0f,1: 0f,2: 0f>
endif 

#line 257
mul r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r6.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
mov r9.xyz, -r9.xyzx
add r8.xyz, r8.xyzx, r9.xyzx  // f3C1<0:NaN:Inf,1:NaN:Inf,2: 0f>
mul r9.xyz, r6.zxyz, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r10.xyz, r6.xyzx, l(1.000000, 0.000000, 0.000000, 0.000000)
mov r10.xyz, -r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx  // f3C2<0:NaN:Inf,1: 0f,2:NaN:Inf>

#line 261
dp3 r0.w, r8.xyzx, r8.xyzx
sqrt r0.w, r0.w
dp3 r1.w, r9.xyzx, r9.xyzx
sqrt r1.w, r1.w
lt r0.w, r1.w, r0.w
if_nz r0.w
  mov r9.xyz, r8.xyzx  // f3T<0:NaN:Inf,1:NaN:Inf,2: 0f>
else 

#line 267
  mov r9.xyz, r9.xyzx  // f3T<0:NaN:Inf,1: 0f,2:NaN:Inf>

#line 261
endif 

#line 269
mul r8.xyz, r6.zxyz, r9.zxyz
mul r6.xyz, r6.xyzx, r9.yzxy
mov r6.xyz, -r6.xyzx
add r6.xyz, r6.xyzx, r8.xyzx
mov r6.xyz, -r6.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // f3B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 273
ine r0.w, l(0, 0, 0, 0), cb5[4].w
if_nz r0.w
  mul r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  add r2.xy, r2.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)  // f3BumpNormal<0:Inf,1:Inf>
  mul r2.xy, r2.xyxx, cb5[1].zzzz  // f3BumpNormal<0:NaN:Inf,1:NaN:Inf>
  mul r2.xzw, r9.xxyz, r2.xxxx
  mul r8.xyz, r6.xyzx, r2.yyyy
  add r2.xyz, r2.xzwx, r8.xyzx
  add r2.xyz, r2.xyzx, v1.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r0.w, r2.xyzx, r2.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 273
else 
  mov r2.xyz, v1.xyzx  // input<4,5,6>
endif 

#line 283
mul r6.xyz, r4.xxxx, r6.xyzx
mul r4.xyw, r4.yyyy, r9.xyxz
add r4.xyw, r4.xyxw, r6.xyxz
mul r5.xyz, r4.zzzz, r5.xyzx
add r4.xyz, r4.xywx, r5.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx  // f3Norm<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r5.xyz, -r0.xyzx
add r5.xyz, r5.xyzx, cb2[22].xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx  // f3ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 290
nop 
mov r0.w, cb2[24].x  // uMaxNumLightsPerTile<0>
mov r1.w, cb2[24].y  // uMaxNumElementsPerTile<0>
mov r6.xyz, v0.xyzx  // SVPosition<0,1,2>

#line 119 "constant.h"
nop 
mov r6.xy, r6.xyxx  // ScreenPos<0,1>

#line 109
div r2.w, r6.x, l(32.000000)
round_ni r2.w, r2.w
div r3.z, r6.y, l(32.000000)
round_ni r3.z, r3.z
utof r3.w, cb2[24].z
mul r3.z, r3.w, r3.z
add r2.w, r2.w, r3.z
ftou r2.w, r2.w  // nTileIdx<0>
mov r2.w, r2.w  // GetTileIndex<0>

#line 119
mov r2.w, r2.w  // nTileIndex<0>
imul null, r3.z, r1.w, r2.w  // nStartIndex<0>

#line 123
ld_indexable(buffer)(uint,uint,uint,uint) r3.w, r3.zzzz, t4.yzwx
mov r3.w, r3.w  // uHalfZBitsHigh<0>
imad r4.w, r1.w, r2.w, l(1)
ld_indexable(buffer)(uint,uint,uint,uint) r5.w, r4.wwww, t4.yzwx
mov r5.w, r5.w  // uHalfZBitsLow<0>
ishl r3.w, r3.w, l(16)
or r3.w, r5.w, r3.w  // uHalfZBits<0>
mov r3.w, r3.w  // fHalfZ<0:NaN:Inf>
nop 
mov r6.z, r6.z  // z<0>

#line 102
mul r5.w, r6.z, cb2[15].z
add r5.w, r5.w, cb2[15].w
div r5.w, l(1.000000), r5.w  // z<0:Inf>
mov r5.w, r5.w  // ConvertProjDepthToView<0:Inf>

#line 128
mov r5.w, r5.w  // fViewPosZ<0:Inf>
lt r3.w, r5.w, r3.w
imad r6.x, r1.w, r2.w, l(4)
iadd r0.w, r6.x, r0.w
movc r6.y, r3.w, r6.x, r0.w  // uFirstLightIndex<0>
imad r6.z, r1.w, r2.w, l(2)
ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.zzzz, t4.yzwx
imad r1.w, r1.w, r2.w, l(3)
ld_indexable(buffer)(uint,uint,uint,uint) r2.w, r1.wwww, t4.yzwx
movc r2.w, r3.w, r6.w, r2.w  // uNumLights<0>

#line 290 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
mov r6.y, r6.y  // uStartIndex<0>
mov r2.w, r2.w  // uLightCount<0>

#line 294
mov r6.y, r6.y  // i<0>

#line 319
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r3.xyxx, t15.wxyz, s0  // f4TexColor<3:Inf,0:Inf,1:Inf,2:Inf>
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r3.xyxx, t21.xyzw, s0

#line 294
mov r10.xyz, r1.xyzx  // f3AccumDiffuseFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r11.xyz, r1.xyzx  // f3AccumSpecularFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r12.xyz, r1.xyzx  // f3AccumDiffuseBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r13.xyz, r1.xyzx  // f3AccumSpecularBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r3.w, r6.y  // i<0>
loop 
  iadd r6.w, r6.y, r2.w
  ult r6.w, r3.w, r6.w
  breakc_z r6.w
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r3.wwww, t4.yzwx  // uLightIndex<0>

#line 303
  nop 
  mov r7.w, r6.w  // uLightIndex<0>
  mov r14.xyz, r0.xyzx  // f3Position<0,1,2>
  mov r15.xyz, r4.xyzx  // f3Norm<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r5.xyzx  // f3ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r17.xyz, r7.xyzx  // f4SpecMapCol<0:Inf,1:Inf,2:Inf>

#line 51
  ld_indexable(buffer)(float,float,float,float) r18.xyzw, r7.wwww, t2.wxyz  // f4CenterAndRadius<3:Inf,0:Inf,1:Inf,2:Inf>
  mov r14.xyz, -r14.xyzx
  add r18.yzw, r14.xxyz, r18.yyzw  // f3ToLight<0:Inf,1:Inf,2:Inf>
  dp3 r9.w, r18.yzwy, r18.yzwy
  rsq r10.w, r9.w
  mul r19.xyz, r10.wwww, r18.yzwy  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  sqrt r9.w, r9.w  // fLightDistance<0:NaN:Inf>

#line 62
  mov r18.x, r18.x  // fRad<0:Inf>
  lt r10.w, r9.w, r18.x
  if_nz r10.w
    div r10.w, r9.w, r18.x  // fx<0:NaN:Inf>

#line 70
    mul r11.w, r10.w, r10.w
    mul r11.w, r11.w, r11.w
    mul r11.w, r11.w, l(1.000000)
    mov r11.w, -r11.w
    add r11.w, r11.w, l(1.000000)
    mul r11.w, r11.w, r11.w
    mul r11.w, r11.w, l(1.000000)
    max r11.w, r11.w, l(0.000000)
    min r11.w, r11.w, l(1.000000)
    mul r11.w, r11.w, r18.x
    mul r9.w, r9.w, r9.w
    add r9.w, r9.w, l(1.000000)
    div r9.w, r11.w, r9.w  // fFallOff<0:NaN:Inf>
    ld_indexable(buffer)(float,float,float,float) r20.xyz, r7.wwww, t3.xyzw  // f3LightColor<0:Inf,1:Inf,2:Inf>
    dp3 r11.w, r19.xyzx, r15.xyzx
    max r11.w, r11.w, l(0.000000)
    min r11.w, r11.w, l(1.000000)
    mul r21.xyz, r11.wwww, r20.xyzx
    mul r21.xyz, r9.wwww, r21.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r21.xyz, r21.xyzx, cb5[1].yyyy  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r21.xyz, r21.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 80
    nop 
    mov r22.xyz, r15.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r16.xyz, r16.xyzx  // f3V<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.yzw, r18.yyzw  // f3L<0:Inf,1:Inf,2:Inf>
    mov r11.w, cb5[10].x  // fRoughness<0>
    mov r12.w, cb5[10].y  // fF0<0>

#line 8 "ggxlighting.h"
    dp3 r13.w, r22.xyzx, r22.xyzx
    rsq r13.w, r13.w
    mul r22.xyz, r13.wwww, r22.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.w, r11.w, r11.w  // fAlpha<0:Inf:[0f,1.#INFf]>
    add r23.xyz, r16.xyzx, r18.yzwy
    dp3 r13.w, r23.xyzx, r23.xyzx
    rsq r13.w, r13.w
    mul r23.xyz, r13.wwww, r23.xyzx  // f3H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r13.w, r22.xyzx, r18.yzwy
    max r13.w, r13.w, l(0.000000)
    min r13.w, r13.w, l(1.000000)  // fDotNL<0:[0f,1f]>
    dp3 r14.w, r22.xyzx, r16.xyzx
    max r14.w, r14.w, l(0.000000)
    min r14.w, r14.w, l(1.000000)  // fDotNV<0:[0f,1f]>
    dp3 r15.w, r22.xyzx, r23.xyzx
    max r15.w, r15.w, l(0.000000)
    min r15.w, r15.w, l(1.000000)  // fDotNH<0:[0f,1f]>
    dp3 r16.x, r18.yzwy, r23.xyzx
    max r16.x, r16.x, l(0.000000)
    min r16.x, r16.x, l(1.000000)  // fDotLH<0:[0f,1f]>

#line 21
    mul r16.y, r11.w, r11.w  // fAlphaSqr<0:NaN:Inf>
    mul r15.w, r15.w, r15.w
    add r16.z, r16.y, l(-1.000000)
    mul r15.w, r15.w, r16.z
    add r15.w, r15.w, l(1.000000)  // fDenom<0:NaN:Inf>
    mul r16.z, r15.w, l(3.141590)
    mul r15.w, r15.w, r16.z
    div r15.w, r16.y, r15.w  // fD<0:NaN:Inf>

#line 27
    mov r16.x, -r16.x
    add r16.x, r16.x, l(1.000000)
    mul r16.y, r16.x, l(1.000000)
    mul r16.x, r16.x, r16.x
    mul r16.x, r16.x, r16.x
    mul r16.x, r16.x, r16.y  // fDotLH5<0:[0f,1f]>
    mov r16.y, -r12.w
    add r16.y, r16.y, l(1.000000)
    mul r16.x, r16.x, r16.y
    add r12.w, r12.w, r16.x  // fF<0:Inf>

#line 31
    div r11.w, r11.w, l(2.000000)  // fK<0:Inf:[0f,1.#INFf]>
    nop 
    mov r13.w, r13.w  // fDotNV<0:[0f,1f]>
    mov r11.w, r11.w  // fK<0:Inf:[0f,1.#INFf]>

#line 3
    mov r16.x, -r11.w
    add r16.x, r16.x, l(1.000000)
    mul r16.y, r13.w, r16.x
    add r16.y, r11.w, r16.y
    div r16.y, l(1.000000), r16.y  // G1V<0:NaN:Inf>

#line 32
    nop 
    mov r14.w, r14.w  // fDotNV<0:[0f,1f]>

#line 3
    mul r14.w, r16.x, r14.w
    add r11.w, r11.w, r14.w
    div r11.w, l(1.000000), r11.w  // G1V<0:NaN:Inf>

#line 32
    mul r11.w, r11.w, r16.y  // fVis<0:NaN:Inf>
    mul r13.w, r15.w, r13.w
    mul r12.w, r12.w, r13.w
    mul r11.w, r11.w, r12.w  // fSpecular<0:NaN:Inf>
    mov r11.w, r11.w  // fLightingFuncGGX<0:NaN:Inf>

#line 80 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r11.w, r11.w  // fSpecMul<0:NaN:Inf>
    mul r16.xyz, r11.wwww, r20.xyzx
    mul r16.xyz, r9.wwww, r16.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r16.xyz, r16.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r15.xyz, -r15.xyzx
    dp3 r11.w, r19.xyzx, r15.xyzx
    max r11.w, r11.w, l(0.000000)
    min r11.w, r11.w, l(1.000000)
    mul r15.xyz, r11.wwww, r20.xyzx
    mul r15.xyz, r9.wwww, r15.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r15.xyz, r15.xyzx, cb5[1].yyyy  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r15.xyz, r15.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 95
    ine r9.w, l(0, 0, 0, 0), cb5[6].z
    if_nz r9.w
      mul r18.xyz, r21.xyzx, r16.xyzx
      mul r18.xyz, r18.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    else 
      ine r9.w, l(0, 0, 0, 0), cb5[5].z
      if_nz r9.w
        mul r20.xyz, r17.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
        mul r22.xyz, r21.xyzx, r16.xyzx
        mul r18.xyz, r20.xyzx, r22.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 

#line 100
        mul r17.xyz, r17.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
        mul r20.xyz, r21.xyzx, r16.xyzx
        mul r18.xyz, r17.xyzx, r20.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 97
      endif 
    endif 

#line 103
    nop 
    mov r9.w, r7.w  // uShadowIndex<0>
    mov r19.xyz, r19.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 138 "lightingconstants.h"
    mov r17.xyz, -r19.xyzx  // f3uv<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r11.w, -r17.z  // f3uv<2:NaN:Inf>
    nop 
    mov r17.xy, r17.xyxx  // f3Vec<0:NaN:Inf,1:NaN:Inf>
    mov r11.w, r11.w  // f3Vec<2:NaN:Inf>

#line 21
    mov r17.x, r17.x  // fx<0:NaN:Inf>
    mov r17.y, r17.y  // fy<0:NaN:Inf>
    mov r11.w, r11.w  // fz<0:NaN:Inf>
    mov r12.w, -r17.x
    max r12.w, r12.w, r17.x
    mov r13.w, -r17.y
    max r13.w, r13.w, r17.y
    lt r14.w, r13.w, r12.w
    mov r15.w, -r11.w
    max r15.w, r11.w, r15.w
    lt r16.w, r15.w, r12.w
    and r14.w, r14.w, r16.w
    if_nz r14.w
      ge r14.w, r17.x, l(0.000000)
      if_nz r14.w
        mov r14.w, l(0)  // iFace<0: 0>
      else 

#line 32
        mov r14.w, l(1)  // iFace<0: 1>

#line 26
      endif 
    else 

#line 35
      lt r12.w, r12.w, r13.w
      lt r13.w, r15.w, r13.w
      and r12.w, r12.w, r13.w
      if_nz r12.w
        ge r12.w, r17.y, l(0.000000)
        if_nz r12.w
          mov r14.w, l(2)  // iFace<0: 2>
        else 

#line 43
          mov r14.w, l(3)  // iFace<0: 3>

#line 37
        endif 
      else 

#line 48
        ge r11.w, r11.w, l(0.000000)
        if_nz r11.w
          mov r14.w, l(4)  // iFace<0: 4>
        else 

#line 54
          mov r14.w, l(5)  // iFace<0: 5>

#line 48
        endif 

#line 35
      endif 

#line 24
    endif 

#line 57
    mov r14.w, r14.w  // Vector3ToFace<0:[0,5]>

#line 141
    mov r11.w, r14.w  // iFace<0:[0,5]>
    imul null, r12.w, r14.w, l(4)
    imad r6.w, r6.w, l(24), r12.w
    mov r17.xyz, v2.xyzx
    mov r17.w, l(1.000000)
    dp4 r19.x, r17.xyzw, cb3[r6.w + 0].xyzw  // f4ShadowTexCoord<0:NaN:Inf>
    dp4 r19.y, r17.xyzw, cb3[r6.w + 1].xyzw  // f4ShadowTexCoord<1:NaN:Inf>
    dp4 r19.z, r17.xyzw, cb3[r6.w + 2].xyzw  // f4ShadowTexCoord<2:NaN:Inf>
    dp4 r6.w, r17.xyzw, cb3[r6.w + 3].xyzw  // f4ShadowTexCoord<3:NaN:Inf>
    div r17.xyz, r19.xyzx, r6.wwww  // f4ShadowTexCoord<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    div r6.w, r17.x, l(2.000000)
    add r6.w, r6.w, l(0.500000)  // f4ShadowTexCoord<0:NaN:Inf>
    div r12.w, r17.y, l(-2.000000)
    add r12.w, r12.w, l(0.500000)  // f4ShadowTexCoord<1:NaN:Inf>
    itof r11.w, r11.w
    add r6.w, r6.w, r11.w  // f4ShadowTexCoord<0:NaN:Inf>
    mul r17.x, r6.w, l(0.166667)  // f4ShadowTexCoord<0:NaN:Inf>

#line 152
    utof r6.w, r9.w
    add r6.w, r6.w, r12.w  // f4ShadowTexCoord<1:NaN:Inf>
    mul r17.y, r6.w, l(0.083333)  // f4ShadowTexCoord<1:NaN:Inf>
    mul r6.w, r10.w, l(5.000000)
    max r6.w, r6.w, l(0.000000)
    min r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, l(-9.900000)
    add r6.w, r6.w, l(10.000000)
    mul r6.w, r6.w, cb3[336].w
    mov r6.w, -r6.w
    add r6.w, r6.w, r17.z  // f4ShadowTexCoord<2:NaN:Inf>
    nop 
    mov r17.x, r17.x  // f3uv<0:NaN:Inf>
    mov r17.y, r17.y  // f3uv<1:NaN:Inf>
    mov r6.w, r6.w  // f3uv<2:NaN:Inf>

#line 84
    sample_c_lz_indexable(-3,-3,0)(texture2d)(float,float,float,float) r9.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, l(0.000000)  // fShadow<0:[0f,1f]>
    sample_c_lz_indexable(-3,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,2f]>
    sample_c_lz_indexable(-3,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,3f]>
    sample_c_lz_indexable(-3,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,4f]>
    sample_c_lz_indexable(-3,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,5f]>
    sample_c_lz_indexable(-3,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,6f]>
    sample_c_lz_indexable(-3,3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,7f]>
    sample_c_lz_indexable(-2,-3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,8f]>
    sample_c_lz_indexable(-2,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,9f]>
    sample_c_lz_indexable(-2,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,10f]>
    sample_c_lz_indexable(-2,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,11f]>
    sample_c_lz_indexable(-2,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,12f]>
    sample_c_lz_indexable(-2,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,13f]>
    sample_c_lz_indexable(-2,3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,14f]>
    sample_c_lz_indexable(-1,-3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,15f]>
    sample_c_lz_indexable(-1,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,16f]>
    sample_c_lz_indexable(-1,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,17f]>
    sample_c_lz_indexable(-1,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,18f]>
    sample_c_lz_indexable(-1,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,19f]>
    sample_c_lz_indexable(-1,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,20f]>
    sample_c_lz_indexable(-1,3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,21f]>
    sample_c_lz_indexable(0,-3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,22f]>
    sample_c_lz_indexable(0,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,23f]>
    sample_c_lz_indexable(0,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,24f]>
    sample_c_lz_indexable(0,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,25f]>
    sample_c_lz_indexable(0,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,26f]>
    sample_c_lz_indexable(0,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,27f]>
    sample_c_lz_indexable(0,3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,28f]>
    sample_c_lz_indexable(1,-3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,29f]>
    sample_c_lz_indexable(1,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,30f]>
    sample_c_lz_indexable(1,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,31f]>
    sample_c_lz_indexable(1,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,32f]>
    sample_c_lz_indexable(1,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,33f]>
    sample_c_lz_indexable(1,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,34f]>
    sample_c_lz_indexable(1,3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,35f]>
    sample_c_lz_indexable(2,-3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,36f]>
    sample_c_lz_indexable(2,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,37f]>
    sample_c_lz_indexable(2,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,38f]>
    sample_c_lz_indexable(2,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,39f]>
    sample_c_lz_indexable(2,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,40f]>
    sample_c_lz_indexable(2,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,41f]>
    sample_c_lz_indexable(2,3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,42f]>
    sample_c_lz_indexable(3,-3,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,43f]>
    sample_c_lz_indexable(3,-2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,44f]>
    sample_c_lz_indexable(3,-1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,45f]>
    sample_c_lz_indexable(3,0,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,46f]>
    sample_c_lz_indexable(3,1,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,47f]>
    sample_c_lz_indexable(3,2,0)(texture2d)(float,float,float,float) r10.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r9.w, r9.w, r10.w  // fShadow<0:[0f,48f]>
    sample_c_lz_indexable(3,3,0)(texture2d)(float,float,float,float) r6.w, r17.xyxx, t13.xxxx, s1, r6.w
    add r6.w, r6.w, r9.w  // fShadow<0:[0f,49f]>

#line 88
    div r6.w, r6.w, l(49.000000)  // fShadow<0:[0f,1f]>
    mov r6.w, r6.w  // FilterShadow<0:[0f,1f]>

#line 157
    mov r6.w, r6.w  // ApplyPointShadow<0:[0f,1f]>

#line 103 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r6.w, r6.w  // fShadowRes<0:[0f,1f]>
    mul r17.xyz, r6.wwww, r21.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r18.xyz, r6.wwww, r18.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r15.xyz, r6.wwww, r15.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r16.xyz, r6.wwww, r16.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 63
  else 
    mov r17.xyz, l(0,0,0,0)  // f3LightColorDiffuseFrontRes<0: 0f,1: 0f,2: 0f>
    mov r18.xyz, l(0,0,0,0)  // f3LightColorSpecularFrontRes<0: 0f,1: 0f,2: 0f>
    mov r15.xyz, l(0,0,0,0)  // f3LightColorDiffuseBackRes<0: 0f,1: 0f,2: 0f>
    mov r16.xyz, l(0,0,0,0)  // f3LightColorSpecularBackRes<0: 0f,1: 0f,2: 0f>
  endif 

#line 303
  mov r17.xyz, r17.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r18.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r15.xyz, r15.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r16.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 307
  mov r6.w, -cb5[1].w
  add r6.w, r6.w, l(1.000000)
  mul r6.w, r6.w, l(8.000000)
  mul r19.xyz, r17.xyzx, r6.wwww
  add r17.xyz, r17.xyzx, r19.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r19.xyz, r15.xyzx, r6.wwww
  add r15.xyz, r15.xyzx, r19.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r19.xyz, r18.xyzx, r6.wwww
  add r18.xyz, r18.xyzx, r19.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r19.xyz, r16.xyzx, r6.wwww
  add r16.xyz, r16.xyzx, r19.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  ine r6.w, l(0, 0, 0, 0), cb5[8].z
  if_nz r6.w
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r7.wwww, t2.xyzw  // f4CenterAndRadius<0:Inf,1:Inf,2:Inf,3:Inf>

#line 317
    ld_indexable(buffer)(float,float,float,float) r20.xyz, r7.wwww, t3.xyzw  // f3LightCol<0:Inf,1:Inf,2:Inf>
    mov r21.xyz, r8.yzwy  // f4TexColor<0:Inf,1:Inf,2:Inf>
    dp3 r6.w, r9.xyzx, r9.xyzx
    sqrt r6.w, r6.w  // fThickValue<0:NaN:Inf>
    nop 
    mov r19.xyz, r19.xyzx  // f4CenterAndRadius<0:Inf,1:Inf,2:Inf>
    mov r20.xyz, r20.xyzx  // f3LightColor<0:Inf,1:Inf,2:Inf>
    mov r21.xyz, r21.xyzx  // float4TexColor<0:Inf,1:Inf,2:Inf>
    mov r6.w, r6.w  // fThickValue<0:NaN:Inf>
    mov r22.xy, cb5[3].xzxx  // f4SSSBRDFParams<0,2>
    mov r23.xyz, cb5[2].xyzx  // f4ColorSSS<0,1,2>
    mov r24.xyz, v6.xyzx  // f3CamPos<0,1,2>
    mov r25.xyz, r2.xyzx  // f3Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.xyz, r18.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r17.xyz, r17.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 155 "constant.h"
    mov r22.x, r22.x  // fMaterialThickness<0>
    mov r22.y, r22.y  // fRimScalar<0>
    mov r23.x, r23.x  // fExtinctionCoefficientRed<0>
    mov r23.y, r23.y  // fExtinctionCoefficientGreen<0>
    mov r23.z, r23.z  // fExtinctionCoefficientBlue<0>
    mov r18.xyz, r18.xyzx  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r21.xyz, r21.xyzx  // f4TexColor<0:Inf,1:Inf,2:Inf>

#line 168
    add r24.xyz, r14.xyzx, r24.xyzx
    dp3 r7.w, r24.xyzx, r24.xyzx
    rsq r7.w, r7.w
    mul r24.xyz, r7.wwww, r24.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r26.xyz, -r24.xyzx  // f3LightDirSSS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r19.xyz, r19.xyzx  // f4LightPos<0:Inf,1:Inf,2:Inf>

#line 173
    add r27.xyz, r14.xyzx, r19.xyzx
    mov r27.w, l(0)
    dp4 r7.w, r27.xyzw, r27.xyzw
    sqrt r7.w, r7.w
    div r7.w, l(1.000000), r7.w
    mul r7.w, r7.w, l(10.000000)  // fAttenuation<0:NaN:Inf>

#line 176
    nop 
    mov r26.xyz, r26.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r25.xyz, r25.xyzx  // f3Vec2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 138
    dp3 r9.w, r26.xyzx, r25.xyzx  // fProduct<0:NaN:Inf>
    mul r9.w, r9.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r9.w, r9.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r9.w, r9.w  // HalfLambert<0:NaN:Inf>

#line 176
    mul r27.xyz, r7.wwww, r9.wwww  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r28.xyz, -r25.xyzx
    dp3 r10.w, r28.xyzx, r26.xyzx
    max r10.w, r10.w, l(0.000000)
    mul r28.xyz, r10.wwww, r22.xxxx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 138
    dp3 r10.w, r26.xyzx, r26.xyzx  // fProduct<0:NaN:Inf>
    mul r10.w, r10.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r10.w, r10.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r10.w, r10.w  // HalfLambert<0:NaN:Inf>

#line 179
    mul r10.w, r22.x, r10.w
    add r28.xyz, r10.wwww, r28.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r29.xyz, r7.wwww, r28.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r30.x, r23.x, r29.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r30.y, r23.y, r29.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r30.z, r23.z, r29.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r29.xyz, r6.wwww, r30.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r10.w, r25.xyzx, r24.xyzx
    max r10.w, r10.w, l(0.000000)
    mov r11.w, -r10.w
    add r24.xyz, r11.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:Inf:[-1.#INFf,1f],1:Inf:[-1.#INFf,1f],2:Inf:[-1.#INFf,1f]>
    mul r24.xyz, r24.xyzx, r24.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r11.w, r25.xyzx, r26.xyzx
    max r11.w, r11.w, l(0.000000)
    mul r30.xyz, r18.xyzx, r11.wwww
    mul r30.xyz, r24.xyzx, r30.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 190
    mul r27.xyz, r21.xyzx, r27.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r27.xyz, r29.xyzx, r27.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r30.xyz, r22.yyyy, r30.xyzx
    mul r30.xyz, r7.wwww, r30.xyzx
    mul r30.xyz, r30.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r27.xyz, r27.xyzx, r30.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 146
    add r26.xyz, r26.xyzx, r25.xyzx
    dp3 r12.w, r26.xyzx, r26.xyzx
    rsq r12.w, r12.w
    mul r26.xyz, r12.wwww, r26.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r12.w, r25.xyzx, r26.xyzx
    max r12.w, r12.w, l(0.000000)
    min r12.w, r12.w, l(1.000000)
    mul r12.w, r12.w, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 195
    mul r7.w, r7.w, r12.w
    mul r25.xyz, r18.xyzx, r7.wwww
    mul r25.xyz, r25.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r25.xyz, r25.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r25.xyz, r25.xyzx, r27.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r25.xyz, r20.xyzx, r25.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    lt r7.w, r10.w, l(0.800000)
    lt r10.w, l(2.000000), r22.x
    and r7.w, r7.w, r10.w
    if_nz r7.w
      div r22.xzw, r29.xxyz, l(15.000000, 0.000000, 15.000000, 15.000000)
      mul r17.xyz, r17.xyzx, r22.xzwx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r18.xyz, r18.xyzx, r22.xzwx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    else 

#line 207
      mul r17.xyz, r17.xyzx, r25.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r18.xyz, r18.xyzx, r25.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    endif 

#line 322 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r18.xyz, r18.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r17.xyz, r17.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 326
    nop 
    mov r16.xyz, r16.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r15.xyz, r15.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161 "constant.h"
    mov r16.xyz, r16.xyzx  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
    add r14.xyz, r14.xyzx, r19.xyzx
    mov r14.w, l(0)
    dp4 r10.w, r14.xyzw, r14.xyzw
    sqrt r10.w, r10.w
    div r10.w, l(1.000000), r10.w
    mul r10.w, r10.w, l(10.000000)  // fAttenuation<0:NaN:Inf>

#line 176
    nop 
    mul r14.xyz, r9.wwww, r10.wwww  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 179
    nop 
    mul r19.xyz, r10.wwww, r28.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r25.x, r23.x, r19.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r25.y, r23.y, r19.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r25.z, r23.z, r19.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r19.xyz, r6.wwww, r25.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 188
    mul r22.xzw, r11.wwww, r16.xxyz
    mul r22.xzw, r22.xxzw, r24.xxyz  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r14.xyz, r21.xyzx, r14.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r14.xyz, r19.xyzx, r14.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r21.xyz, r22.yyyy, r22.xzwx
    mul r21.xyz, r10.wwww, r21.xyzx
    mul r21.xyz, r21.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r14.xyz, r14.xyzx, r21.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mul r6.w, r10.w, r12.w
    mul r21.xyz, r16.xyzx, r6.wwww
    mul r21.xyz, r21.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r21.xyz, r21.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r14.xyz, r14.xyzx, r21.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r14.xyz, r20.xyzx, r14.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    if_nz r7.w
      div r19.xyz, r19.xyzx, l(15.000000, 15.000000, 15.000000, 0.000000)
      mul r15.xyz, r15.xyzx, r19.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r16.xyz, r16.xyzx, r19.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    else 

#line 207
      mul r15.xyz, r14.xyzx, r15.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r16.xyz, r14.xyzx, r16.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    endif 

#line 326 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r16.xyz, r16.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r15.xyz, r15.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 312
  endif 

#line 335
  add r10.xyz, r10.xyzx, r17.xyzx  // f3AccumDiffuseFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r11.xyz, r11.xyzx, r18.xyzx  // f3AccumSpecularFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r12.xyz, r12.xyzx, r15.xyzx  // f3AccumDiffuseBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r13.xyz, r13.xyzx, r16.xyzx  // f3AccumSpecularBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 294
  iadd r3.w, r3.w, l(1)  // i<0>
endloop 

#line 345
nop 

#line 119 "constant.h"
nop 

#line 123
ld_indexable(buffer)(uint,uint,uint,uint) r1.x, r3.zzzz, t8.xyzw
mov r1.x, r1.x  // uHalfZBitsHigh<0>
ld_indexable(buffer)(uint,uint,uint,uint) r1.y, r4.wwww, t8.yxzw
mov r1.y, r1.y  // uHalfZBitsLow<0>
ishl r1.x, r1.x, l(16)
or r1.x, r1.y, r1.x  // uHalfZBits<0>
mov r1.x, r1.x  // fHalfZ<0:NaN:Inf>
nop 
lt r1.x, r5.w, r1.x
movc r0.w, r1.x, r6.x, r0.w  // uFirstLightIndex<0>
ld_indexable(buffer)(uint,uint,uint,uint) r1.y, r6.zzzz, t8.yxzw
ld_indexable(buffer)(uint,uint,uint,uint) r1.z, r1.wwww, t8.yzxw
movc r1.x, r1.x, r1.y, r1.z  // uNumLights<0>

#line 345 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
mov r0.w, r0.w  // uStartIndex<0>
mov r1.x, r1.x  // uLightCount<0>

#line 349
mov r0.w, r0.w  // i<0>
mov r1.yzw, r10.xxyz  // f3AccumDiffuseFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r6.xyz, r11.xyzx  // f3AccumSpecularFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r14.xyz, r12.xyzx  // f3AccumDiffuseBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r15.xyz, r13.xyzx  // f3AccumSpecularBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r2.w, r0.w  // i<0>
loop 
  iadd r3.z, r0.w, r1.x
  ult r3.z, r2.w, r3.z
  breakc_z r3.z
  ld_indexable(buffer)(uint,uint,uint,uint) r3.z, r2.wwww, t8.yzxw  // uLightIndex<0>

#line 358
  nop 
  mov r3.w, r3.z  // uLightIndex<0>
  mov r16.xyz, r0.xyzx  // f3Position<0,1,2>
  mov r17.xyz, r4.xyzx  // f3Norm<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r5.xyzx  // f3ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r19.xyz, r7.xyzx  // f4SpecMapCol<0:Inf,1:Inf,2:Inf>

#line 117
  ld_indexable(buffer)(float,float,float,float) r20.xyzw, r3.wwww, t5.xyzw  // f4BoundingSphereAndRadius<0:Inf,1:Inf,2:Inf,3:Inf>
  ld_indexable(buffer)(float,float,float,float) r21.xyzw, r3.wwww, t7.wxyz  // f4SpotParams<3:Inf,0:Inf,1:Inf,2:Inf>

#line 121
  mov r22.xy, r21.yzyy  // f3SpotLightDir<0:Inf,1:Inf>
  mul r4.w, r22.x, r22.x
  mov r4.w, -r4.w
  add r4.w, r4.w, l(1.000000)
  mul r5.w, r22.y, r22.y
  mov r5.w, -r5.w
  add r4.w, r4.w, r5.w
  sqrt r4.w, r4.w  // f3SpotLightDir<2:NaN>
  lt r5.w, l(0.000000), r21.w
  mov r6.w, -r4.w
  movc r22.z, r5.w, r4.w, r6.w  // f3SpotLightDir<2:NaN>
  mul r23.xyz, r20.wwww, r22.xyzx
  mov r23.xyz, -r23.xyzx
  add r20.xyz, r20.xyzx, r23.xyzx  // f3LightPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, -r16.xyzx
  add r20.xyz, r16.xyzx, r20.xyzx  // f3ToLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  dp3 r4.w, r20.xyzx, r20.xyzx
  rsq r6.w, r4.w
  mul r23.xyz, r6.wwww, r20.xyzx  // f3ToLightNorm<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  sqrt r4.w, r4.w  // fLightDistance<0:NaN:Inf>

#line 132
  mov r24.xyz, -r23.xyzx
  dp3 r6.w, r24.xyzx, r22.xyzx  // fCosineOfCurrentConeAngle<0:NaN:Inf>

#line 139
  mov r21.x, r21.x  // fRad<0:Inf>
  mov r7.w, -r21.w
  movc r5.w, r5.w, r21.w, r7.w  // fCosineOfConeAngle<0:Inf>
  lt r7.w, r4.w, r21.x
  lt r9.w, r5.w, r6.w
  and r7.w, r7.w, r9.w
  if_nz r7.w
    mov r5.w, -r5.w
    add r6.w, r5.w, r6.w
    add r5.w, r5.w, l(1.000000)
    div r5.w, r6.w, r5.w  // fRadialAttenuation<0:NaN:Inf>
    mul r5.w, r5.w, r5.w  // fRadialAttenuation<0:NaN:Inf>
    div r6.w, r4.w, r21.x  // fx<0:NaN:Inf>

#line 150
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(1.000000)
    mov r6.w, -r6.w
    add r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(1.000000)
    max r6.w, r6.w, l(0.000000)
    min r6.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r21.x
    mul r4.w, r4.w, r4.w
    add r4.w, r4.w, l(1.000000)
    div r4.w, r6.w, r4.w  // fFallOff<0:NaN:Inf>
    ld_indexable(buffer)(float,float,float,float) r21.xyz, r3.wwww, t6.xyzw  // f3LightColor<0:Inf,1:Inf,2:Inf>
    dp3 r6.w, r23.xyzx, r17.xyzx
    max r6.w, r6.w, l(0.000000)
    min r6.w, r6.w, l(1.000000)
    mul r22.xyz, r6.wwww, r21.xyzx
    mul r22.xyz, r4.wwww, r22.xyzx
    mul r22.xyz, r5.wwww, r22.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r22.xyz, r22.xyzx, cb5[1].yyyy  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r22.xyz, r22.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 158
    nop 
    mov r24.xyz, r17.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.xyz, r18.xyzx  // f3V<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r20.xyz, r20.xyzx  // f3L<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r6.w, cb5[10].x  // fRoughness<0>
    mov r7.w, cb5[10].y  // fF0<0>

#line 8 "ggxlighting.h"
    dp3 r9.w, r24.xyzx, r24.xyzx
    rsq r9.w, r9.w
    mul r24.xyz, r9.wwww, r24.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r6.w, r6.w, r6.w  // fAlpha<0:Inf:[0f,1.#INFf]>
    add r25.xyz, r18.xyzx, r20.xyzx
    dp3 r9.w, r25.xyzx, r25.xyzx
    rsq r9.w, r9.w
    mul r25.xyz, r9.wwww, r25.xyzx  // f3H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r9.w, r24.xyzx, r20.xyzx
    max r9.w, r9.w, l(0.000000)
    min r9.w, r9.w, l(1.000000)  // fDotNL<0:[0f,1f]>
    dp3 r10.w, r24.xyzx, r18.xyzx
    max r10.w, r10.w, l(0.000000)
    min r10.w, r10.w, l(1.000000)  // fDotNV<0:[0f,1f]>
    dp3 r11.w, r24.xyzx, r25.xyzx
    max r11.w, r11.w, l(0.000000)
    min r11.w, r11.w, l(1.000000)  // fDotNH<0:[0f,1f]>
    dp3 r12.w, r20.xyzx, r25.xyzx
    max r12.w, r12.w, l(0.000000)
    min r12.w, r12.w, l(1.000000)  // fDotLH<0:[0f,1f]>

#line 21
    mul r13.w, r6.w, r6.w  // fAlphaSqr<0:NaN:Inf>
    mul r11.w, r11.w, r11.w
    add r14.w, r13.w, l(-1.000000)
    mul r11.w, r11.w, r14.w
    add r11.w, r11.w, l(1.000000)  // fDenom<0:NaN:Inf>
    mul r14.w, r11.w, l(3.141590)
    mul r11.w, r11.w, r14.w
    div r11.w, r13.w, r11.w  // fD<0:NaN:Inf>

#line 27
    mov r12.w, -r12.w
    add r12.w, r12.w, l(1.000000)
    mul r13.w, r12.w, l(1.000000)
    mul r12.w, r12.w, r12.w
    mul r12.w, r12.w, r12.w
    mul r12.w, r12.w, r13.w  // fDotLH5<0:[0f,1f]>
    mov r13.w, -r7.w
    add r13.w, r13.w, l(1.000000)
    mul r12.w, r12.w, r13.w
    add r7.w, r7.w, r12.w  // fF<0:Inf>

#line 31
    div r6.w, r6.w, l(2.000000)  // fK<0:Inf:[0f,1.#INFf]>
    nop 
    mov r9.w, r9.w  // fDotNV<0:[0f,1f]>
    mov r6.w, r6.w  // fK<0:Inf:[0f,1.#INFf]>

#line 3
    mov r12.w, -r6.w
    add r12.w, r12.w, l(1.000000)
    mul r13.w, r9.w, r12.w
    add r13.w, r6.w, r13.w
    div r13.w, l(1.000000), r13.w  // G1V<0:NaN:Inf>

#line 32
    nop 
    mov r10.w, r10.w  // fDotNV<0:[0f,1f]>

#line 3
    mul r10.w, r12.w, r10.w
    add r6.w, r6.w, r10.w
    div r6.w, l(1.000000), r6.w  // G1V<0:NaN:Inf>

#line 32
    mul r6.w, r6.w, r13.w  // fVis<0:NaN:Inf>
    mul r9.w, r11.w, r9.w
    mul r7.w, r7.w, r9.w
    mul r6.w, r6.w, r7.w  // fSpecular<0:NaN:Inf>
    mov r6.w, r6.w  // fLightingFuncGGX<0:NaN:Inf>

#line 158 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r6.w, r6.w  // fSpecMul<0:NaN:Inf>
    mul r18.xyz, r6.wwww, r21.xyzx
    mul r18.xyz, r4.wwww, r18.xyzx
    mul r18.xyz, r5.wwww, r18.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r18.xyz, r18.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r17.xyz, -r17.xyzx
    dp3 r6.w, r23.xyzx, r17.xyzx
    max r6.w, r6.w, l(0.000000)
    min r6.w, r6.w, l(1.000000)
    mul r17.xyz, r6.wwww, r21.xyzx
    mul r17.xyz, r4.wwww, r17.xyzx
    mul r17.xyz, r5.wwww, r17.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r17.xyz, r17.xyzx, cb5[1].yyyy  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 171
    ine r4.w, l(0, 0, 0, 0), cb5[6].z
    if_nz r4.w
      mul r20.xyz, r22.xyzx, r18.xyzx
      mul r20.xyz, r20.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    else 
      ine r4.w, l(0, 0, 0, 0), cb5[5].z
      if_nz r4.w
        mul r21.xyz, r19.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
        mul r23.xyz, r22.xyzx, r18.xyzx
        mul r20.xyz, r21.xyzx, r23.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 

#line 176
        mul r19.xyz, r19.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
        mul r21.xyz, r22.xyzx, r18.xyzx
        mul r20.xyz, r19.xyzx, r21.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
      endif 
    endif 

#line 178
    nop 
    mov r4.w, r3.w  // uShadowIndex<0>

#line 162 "lightingconstants.h"
    imul null, r3.z, r3.z, l(4)
    mov r19.xyz, v2.xyzx
    mov r19.w, l(1.000000)
    dp4 r21.x, r19.xyzw, cb3[r3.z + 288].xyzw  // f4ShadowTexCoord<0:NaN:Inf>
    dp4 r21.y, r19.xyzw, cb3[r3.z + 289].xyzw  // f4ShadowTexCoord<1:NaN:Inf>
    dp4 r21.z, r19.xyzw, cb3[r3.z + 290].xyzw  // f4ShadowTexCoord<2:NaN:Inf>
    dp4 r3.z, r19.xyzw, cb3[r3.z + 291].xyzw  // f4ShadowTexCoord<3:NaN:Inf>
    div r19.xyz, r21.xyzx, r3.zzzz  // f4ShadowTexCoord<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    div r3.z, r19.x, l(2.000000)
    add r3.z, r3.z, l(0.500000)  // f4ShadowTexCoord<0:NaN:Inf>
    div r5.w, r19.y, l(-2.000000)
    add r19.y, r5.w, l(0.500000)  // f4ShadowTexCoord<1:NaN:Inf>
    utof r4.w, r4.w
    add r3.z, r3.z, r4.w  // f4ShadowTexCoord<0:NaN:Inf>
    mul r19.x, r3.z, l(0.083333)  // f4ShadowTexCoord<0:NaN:Inf>
    mul r3.z, cb3[336].w, l(6.000000)
    mov r3.z, -r3.z
    add r3.z, r3.z, r19.z  // f4ShadowTexCoord<2:NaN:Inf>

#line 173
    nop 
    mov r19.x, r19.x  // f3uv<0:NaN:Inf>
    mov r19.y, r19.y  // f3uv<1:NaN:Inf>
    mov r3.z, r3.z  // f3uv<2:NaN:Inf>

#line 84
    sample_c_lz_indexable(-3,-3,0)(texture2d)(float,float,float,float) r4.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, l(0.000000)  // fShadow<0:[0f,1f]>
    sample_c_lz_indexable(-3,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,2f]>
    sample_c_lz_indexable(-3,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,3f]>
    sample_c_lz_indexable(-3,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,4f]>
    sample_c_lz_indexable(-3,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,5f]>
    sample_c_lz_indexable(-3,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,6f]>
    sample_c_lz_indexable(-3,3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,7f]>
    sample_c_lz_indexable(-2,-3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,8f]>
    sample_c_lz_indexable(-2,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,9f]>
    sample_c_lz_indexable(-2,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,10f]>
    sample_c_lz_indexable(-2,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,11f]>
    sample_c_lz_indexable(-2,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,12f]>
    sample_c_lz_indexable(-2,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,13f]>
    sample_c_lz_indexable(-2,3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,14f]>
    sample_c_lz_indexable(-1,-3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,15f]>
    sample_c_lz_indexable(-1,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,16f]>
    sample_c_lz_indexable(-1,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,17f]>
    sample_c_lz_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,18f]>
    sample_c_lz_indexable(-1,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,19f]>
    sample_c_lz_indexable(-1,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,20f]>
    sample_c_lz_indexable(-1,3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,21f]>
    sample_c_lz_indexable(0,-3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,22f]>
    sample_c_lz_indexable(0,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,23f]>
    sample_c_lz_indexable(0,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,24f]>
    sample_c_lz_indexable(0,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,25f]>
    sample_c_lz_indexable(0,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,26f]>
    sample_c_lz_indexable(0,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,27f]>
    sample_c_lz_indexable(0,3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,28f]>
    sample_c_lz_indexable(1,-3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,29f]>
    sample_c_lz_indexable(1,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,30f]>
    sample_c_lz_indexable(1,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,31f]>
    sample_c_lz_indexable(1,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,32f]>
    sample_c_lz_indexable(1,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,33f]>
    sample_c_lz_indexable(1,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,34f]>
    sample_c_lz_indexable(1,3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,35f]>
    sample_c_lz_indexable(2,-3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,36f]>
    sample_c_lz_indexable(2,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,37f]>
    sample_c_lz_indexable(2,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,38f]>
    sample_c_lz_indexable(2,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,39f]>
    sample_c_lz_indexable(2,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,40f]>
    sample_c_lz_indexable(2,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,41f]>
    sample_c_lz_indexable(2,3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,42f]>
    sample_c_lz_indexable(3,-3,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,43f]>
    sample_c_lz_indexable(3,-2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,44f]>
    sample_c_lz_indexable(3,-1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,45f]>
    sample_c_lz_indexable(3,0,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,46f]>
    sample_c_lz_indexable(3,1,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,47f]>
    sample_c_lz_indexable(3,2,0)(texture2d)(float,float,float,float) r5.w, r19.xyxx, t14.xxxx, s1, r3.z
    add r4.w, r4.w, r5.w  // fShadow<0:[0f,48f]>
    sample_c_lz_indexable(3,3,0)(texture2d)(float,float,float,float) r3.z, r19.xyxx, t14.xxxx, s1, r3.z
    add r3.z, r3.z, r4.w  // fShadow<0:[0f,49f]>

#line 88
    div r3.z, r3.z, l(49.000000)  // fShadow<0:[0f,1f]>
    mov r3.z, r3.z  // FilterShadow<0:[0f,1f]>

#line 173
    mov r3.z, r3.z  // ApplySpotShadow<0:[0f,1f]>

#line 178 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r3.z, r3.z  // fShadowRes<0:[0f,1f]>
    mul r19.xyz, r3.zzzz, r22.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r20.xyz, r3.zzzz, r20.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r17.xyz, r3.zzzz, r17.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r18.xyz, r3.zzzz, r18.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 141
  else 
    mov r19.xyz, l(0,0,0,0)  // f3LightColorDiffuseFrontRes<0: 0f,1: 0f,2: 0f>
    mov r20.xyz, l(0,0,0,0)  // f3LightColorSpecularFrontRes<0: 0f,1: 0f,2: 0f>
    mov r17.xyz, l(0,0,0,0)  // f3LightColorDiffuseBackRes<0: 0f,1: 0f,2: 0f>
    mov r18.xyz, l(0,0,0,0)  // f3LightColorSpecularBackRes<0: 0f,1: 0f,2: 0f>
  endif 

#line 358
  mov r19.xyz, r19.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r20.xyz, r20.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r17.xyz, r17.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r18.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 362
  mov r3.z, -cb5[1].w
  add r3.z, r3.z, l(1.000000)
  mul r3.z, r3.z, l(8.000000)
  mul r21.xyz, r19.xyzx, r3.zzzz
  add r19.xyz, r19.xyzx, r21.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r21.xyz, r17.xyzx, r3.zzzz
  add r17.xyz, r17.xyzx, r21.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r21.xyz, r20.xyzx, r3.zzzz
  add r20.xyz, r20.xyzx, r21.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r21.xyz, r18.xyzx, r3.zzzz
  add r18.xyz, r18.xyzx, r21.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  ine r3.z, l(0, 0, 0, 0), cb5[8].z
  if_nz r3.z
    ld_indexable(buffer)(float,float,float,float) r21.xyz, r3.wwww, t5.xyzw  // f4CenterAndRadius<0:Inf,1:Inf,2:Inf,3:Inf>

#line 372
    ld_indexable(buffer)(float,float,float,float) r22.xyz, r3.wwww, t6.xyzw  // f3LightCol<0:Inf,1:Inf,2:Inf>
    mov r23.xyz, r8.yzwy  // f4TexColor<0:Inf,1:Inf,2:Inf>
    dp3 r3.z, r9.xyzx, r9.xyzx
    sqrt r3.z, r3.z  // fThickValue<0:NaN:Inf>
    nop 
    mov r21.xyz, r21.xyzx  // f4CenterAndRadius<0:Inf,1:Inf,2:Inf>
    mov r22.xyz, r22.xyzx  // f3LightColor<0:Inf,1:Inf,2:Inf>
    mov r23.xyz, r23.xyzx  // float4TexColor<0:Inf,1:Inf,2:Inf>
    mov r3.z, r3.z  // fThickValue<0:NaN:Inf>
    mov r24.xy, cb5[3].xzxx  // f4SSSBRDFParams<0,2>
    mov r25.xyz, cb5[2].xyzx  // f4ColorSSS<0,1,2>
    mov r26.xyz, v6.xyzx  // f3CamPos<0,1,2>
    mov r27.xyz, r2.xyzx  // f3Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r20.xyz, r20.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r19.xyz, r19.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 155 "constant.h"
    mov r24.x, r24.x  // fMaterialThickness<0>
    mov r24.y, r24.y  // fRimScalar<0>
    mov r25.x, r25.x  // fExtinctionCoefficientRed<0>
    mov r25.y, r25.y  // fExtinctionCoefficientGreen<0>
    mov r25.z, r25.z  // fExtinctionCoefficientBlue<0>
    mov r20.xyz, r20.xyzx  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r23.xyz, r23.xyzx  // f4TexColor<0:Inf,1:Inf,2:Inf>

#line 168
    add r26.xyz, r16.xyzx, r26.xyzx
    dp3 r3.w, r26.xyzx, r26.xyzx
    rsq r3.w, r3.w
    mul r26.xyz, r3.wwww, r26.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r28.xyz, -r26.xyzx  // f3LightDirSSS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r21.xyz, r21.xyzx  // f4LightPos<0:Inf,1:Inf,2:Inf>

#line 173
    add r29.xyz, r16.xyzx, r21.xyzx
    mov r29.w, l(0)
    dp4 r3.w, r29.xyzw, r29.xyzw
    sqrt r3.w, r3.w
    div r3.w, l(1.000000), r3.w
    mul r3.w, r3.w, l(10.000000)  // fAttenuation<0:NaN:Inf>

#line 176
    nop 
    mov r28.xyz, r28.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r27.xyz, r27.xyzx  // f3Vec2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 138
    dp3 r4.w, r28.xyzx, r27.xyzx  // fProduct<0:NaN:Inf>
    mul r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.w, r4.w  // HalfLambert<0:NaN:Inf>

#line 176
    mul r29.xyz, r3.wwww, r4.wwww  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r30.xyz, -r27.xyzx
    dp3 r5.w, r30.xyzx, r28.xyzx
    max r5.w, r5.w, l(0.000000)
    mul r30.xyz, r5.wwww, r24.xxxx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 138
    dp3 r5.w, r28.xyzx, r28.xyzx  // fProduct<0:NaN:Inf>
    mul r5.w, r5.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r5.w, r5.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r5.w, r5.w  // HalfLambert<0:NaN:Inf>

#line 179
    mul r5.w, r24.x, r5.w
    add r30.xyz, r5.wwww, r30.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r31.xyz, r3.wwww, r30.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r32.x, r25.x, r31.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r32.y, r25.y, r31.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r32.z, r25.z, r31.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r31.xyz, r3.zzzz, r32.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r27.xyzx, r26.xyzx
    max r5.w, r5.w, l(0.000000)
    mov r6.w, -r5.w
    add r26.xyz, r6.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:Inf:[-1.#INFf,1f],1:Inf:[-1.#INFf,1f],2:Inf:[-1.#INFf,1f]>
    mul r26.xyz, r26.xyzx, r26.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r6.w, r27.xyzx, r28.xyzx
    max r6.w, r6.w, l(0.000000)
    mul r32.xyz, r20.xyzx, r6.wwww
    mul r32.xyz, r26.xyzx, r32.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 190
    mul r29.xyz, r23.xyzx, r29.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r29.xyz, r31.xyzx, r29.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r32.xyz, r24.yyyy, r32.xyzx
    mul r32.xyz, r3.wwww, r32.xyzx
    mul r32.xyz, r32.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r29.xyz, r29.xyzx, r32.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 146
    add r28.xyz, r28.xyzx, r27.xyzx
    dp3 r7.w, r28.xyzx, r28.xyzx
    rsq r7.w, r7.w
    mul r28.xyz, r7.wwww, r28.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r7.w, r27.xyzx, r28.xyzx
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)
    mul r7.w, r7.w, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 195
    mul r3.w, r3.w, r7.w
    mul r27.xyz, r20.xyzx, r3.wwww
    mul r27.xyz, r27.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r27.xyz, r27.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r27.xyz, r27.xyzx, r29.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r27.xyz, r22.xyzx, r27.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    lt r3.w, r5.w, l(0.800000)
    lt r5.w, l(2.000000), r24.x
    and r3.w, r3.w, r5.w
    if_nz r3.w
      div r24.xzw, r31.xxyz, l(15.000000, 0.000000, 15.000000, 15.000000)
      mul r19.xyz, r19.xyzx, r24.xzwx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r20.xyz, r20.xyzx, r24.xzwx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    else 

#line 207
      mul r19.xyz, r19.xyzx, r27.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r20.xyz, r20.xyzx, r27.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    endif 

#line 377 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r20.xyz, r20.xyzx  // f3LightColorSpecularFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r19.xyz, r19.xyzx  // f3LightColorDiffuseFrontRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 381
    nop 
    mov r18.xyz, r18.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r17.xyz, r17.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161 "constant.h"
    mov r18.xyz, r18.xyzx  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
    add r16.xyz, r16.xyzx, r21.xyzx
    mov r16.w, l(0)
    dp4 r5.w, r16.xyzw, r16.xyzw
    sqrt r5.w, r5.w
    div r5.w, l(1.000000), r5.w
    mul r5.w, r5.w, l(10.000000)  // fAttenuation<0:NaN:Inf>

#line 176
    nop 
    mul r16.xyz, r4.wwww, r5.wwww  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 179
    nop 
    mul r21.xyz, r5.wwww, r30.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r27.x, r25.x, r21.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r27.y, r25.y, r21.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r27.z, r25.z, r21.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r21.xyz, r3.zzzz, r27.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 188
    mul r24.xzw, r6.wwww, r18.xxyz
    mul r24.xzw, r24.xxzw, r26.xxyz  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r16.xyz, r23.xyzx, r16.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r16.xyz, r21.xyzx, r16.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r23.xyz, r24.yyyy, r24.xzwx
    mul r23.xyz, r5.wwww, r23.xyzx
    mul r23.xyz, r23.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r16.xyz, r16.xyzx, r23.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mul r3.z, r5.w, r7.w
    mul r23.xyz, r18.xyzx, r3.zzzz
    mul r23.xyz, r23.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r23.xyz, r23.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r16.xyz, r16.xyzx, r23.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r16.xyz, r22.xyzx, r16.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    if_nz r3.w
      div r21.xyz, r21.xyzx, l(15.000000, 15.000000, 15.000000, 0.000000)
      mul r17.xyz, r17.xyzx, r21.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r18.xyz, r18.xyzx, r21.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    else 

#line 207
      mul r17.xyz, r16.xyzx, r17.xyzx  // f3LightDiffuseResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mul r18.xyz, r16.xyzx, r18.xyzx  // f3LightColorSpecularResult<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 200
    endif 

#line 381 "\\?\C:\Users\admin\Documents\Visual Studio 2010\Projects\Vektoria_2015-02-12a\Vektoria\trunk\VektoriaApp\shaders\Source\transperency.hlsl"
    mov r18.xyz, r18.xyzx  // f3LightColorSpecularBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r17.xyz, r17.xyzx  // f3LightColorDiffuseBackRes<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 367
  endif 

#line 388
  add r1.yzw, r1.yyzw, r19.xxyz  // f3AccumDiffuseFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r6.xyz, r6.xyzx, r20.xyzx  // f3AccumSpecularFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r14.xyz, r14.xyzx, r17.xyzx  // f3AccumDiffuseBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r15.xyz, r15.xyzx, r18.xyzx  // f3AccumSpecularBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 349
  iadd r2.w, r2.w, l(1)  // i<0>
endloop 

#line 395
mul r0.xyz, r1.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000)  // f3AccumDiffuseFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mul r1.xyz, r6.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)  // f3AccumSpecularFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mul r4.yzw, r14.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000)  // f3AccumDiffuseBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mul r5.xyz, r15.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)  // f3AccumSpecularBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 401
mul r0.w, r4.x, l(0.500000)
mul r0.w, r0.w, l(0.500000)  // fAmbientBlendFront<0:NaN:Inf>
mul r6.xyz, r0.wwww, cb2[20].xyzx
mov r0.w, -r0.w
add r0.w, r0.w, l(1.000000)
mul r7.xyz, r0.wwww, cb2[21].xyzx
add r6.xyz, r6.xyzx, r7.xyzx  // f3AmbientFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r0.w, -r4.x
mul r0.w, r0.w, l(0.500000)
mul r0.w, r0.w, l(0.500000)  // fAmbientBlendBack<0:NaN:Inf>
mul r7.xyz, r0.wwww, cb2[20].xyzx
mov r0.w, -r0.w
add r0.w, r0.w, l(1.000000)
mul r9.xyz, r0.wwww, cb2[21].xyzx
add r7.xyz, r7.xyzx, r9.xyzx  // f3AmbientBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 408
mul r8.yzw, r8.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000)  // f3Color<0:Inf,1:Inf,2:Inf>
mul r0.xyz, r0.xyzx, r6.xyzx
add r0.xyz, r8.yzwy, r0.xyzx  // f3DiffuseAndAmbientFront<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mul r4.xyz, r4.yzwy, r7.xyzx
add r4.xyz, r8.yzwy, r4.xyzx  // f3DiffuseAndAmbientBack<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
add r0.xyz, r1.xyzx, r0.xyzx
add r1.xyz, r5.xyzx, r4.xyzx
mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.xyz, r0.xyzx, r1.xyzx  // f3AccumLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r8.x, r8.x  // f4DiffTex<3:Inf>
ine r0.w, l(0, 0, 0, 0), cb5[7].z
if_nz r0.w

#line 421
  resinfo_indexable(texture2d)(float,float,float,float)_uint r1.xy, l(0), t15.xyzw  // iWidth<0>, iHeight<0>, iLevels<0>

#line 424
  utof r0.w, r1.x
  mul r4.x, r0.w, r3.x  // f2TexCoord2<0:NaN:Inf>
  utof r0.w, r1.y
  mul r4.y, r0.w, r3.y  // f2TexCoord2<1:NaN:Inf>

#line 429
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, l(0, 0, 0, 0), t15.xyzw  // f4ChromaKey<0:Inf,1:Inf,2:Inf,3:Inf>

#line 438
  add r3.zw, r4.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)  // f2TexPos1<0:NaN:Inf,1:NaN:Inf>
  add r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)  // f2TexPos2<0:NaN:Inf,1:NaN:Inf>
  add r5.xy, r4.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000)  // f2TexPos3<0:NaN:Inf,1:NaN:Inf>
  add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // f2TexPos4<0:NaN:Inf,1:NaN:Inf>
  ftoi r6.xy, r3.zwzz
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyzw, t15.wxyz  // f4Col1<3:Inf,0:Inf,1:Inf,2:Inf>
  ftoi r7.xy, r4.zwzz
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.xyzw, r7.xyzw, t15.wxyz  // f4Col2<3:Inf,0:Inf,1:Inf,2:Inf>
  ftoi r5.xy, r5.xyxx
  mov r5.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyzw, t15.wxyz  // f4Col3<3:Inf,0:Inf,1:Inf,2:Inf>
  ftoi r4.xy, r4.xyxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t15.wxyz  // f4Col4<3:Inf,0:Inf,1:Inf,2:Inf>
  eq r0.w, r6.y, r1.x
  eq r1.w, r6.z, r1.y
  and r0.w, r0.w, r1.w
  eq r1.w, r6.w, r1.z
  and r0.w, r0.w, r1.w
  if_nz r0.w
    mov r6.x, l(0)  // f4Col1<3: 0f>
  endif 
  eq r0.w, r7.y, r1.x
  eq r1.w, r7.z, r1.y
  and r0.w, r0.w, r1.w
  eq r1.w, r7.w, r1.z
  and r0.w, r0.w, r1.w
  if_nz r0.w
    mov r7.x, l(0)  // f4Col2<3: 0f>
  endif 
  eq r0.w, r5.y, r1.x
  eq r1.w, r5.z, r1.y
  and r0.w, r0.w, r1.w
  eq r1.w, r5.w, r1.z
  and r0.w, r0.w, r1.w
  if_nz r0.w
    mov r5.x, l(0)  // f4Col3<3: 0f>
  endif 

#line 449
  eq r0.w, r4.y, r1.x
  eq r1.x, r4.z, r1.y
  and r0.w, r0.w, r1.x
  eq r1.x, r4.w, r1.z
  and r0.w, r0.w, r1.x
  if_nz r0.w
    mov r4.x, l(0)  // f4Col4<3: 0f>
  endif 
  frc r0.w, r3.z  // f2TexPos1<0:NaN>
  frc r1.x, r3.w  // f2TexPos1<1:NaN>

#line 453
  mov r1.y, -r6.x
  add r1.y, r1.y, r7.x
  mul r1.y, r0.w, r1.y
  add r1.y, r6.x, r1.y  // fAlpha<0:NaN:Inf>
  mov r1.z, -r5.x
  add r1.z, r1.z, r4.x
  mul r0.w, r0.w, r1.z
  add r0.w, r5.x, r0.w
  mov r1.z, -r1.y
  add r0.w, r0.w, r1.z
  mul r0.w, r1.x, r0.w
  add r8.x, r1.y, r0.w  // fAlpha<0:NaN:Inf>

#line 473
  mov r8.x, r8.x  // f4DiffTex<3:NaN:Inf>

#line 416
endif 

#line 478
mul r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
ine r0.w, l(0, 0, 0, 0), cb5[7].w
if_nz r0.w
  mov r1.xyz, -v2.xyzx
  add r1.xyz, r1.xyzx, v6.xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, r1.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  dp3 r0.w, r1.xyzx, r2.xyzx
  add r1.z, r0.w, r0.w
  mov r1.z, -r1.z
  mul r1.zw, r1.zzzz, r2.xxxy
  add r1.zw, r1.xxxy, r1.zzzw  // f3Reflection<0:NaN:Inf,1:NaN:Inf>
  mul r2.z, r0.w, r0.w
  mov r2.z, -r2.z
  add r2.z, r2.z, l(1.000000)
  mul r2.z, r2.z, l(0.980100)
  mov r2.z, -r2.z
  add r2.z, r2.z, l(1.000000)
  sqrt r2.w, r2.z
  mul r0.w, r0.w, l(0.990000)
  add r0.w, r2.w, r0.w
  ge r2.z, r2.z, l(0.000000)
  mul r1.xy, r1.xyxx, l(0.990000, 0.990000, 0.000000, 0.000000)
  mul r2.xy, r2.xyxx, r0.wwww
  mov r2.xy, -r2.xyxx
  add r1.xy, r1.xyxx, r2.xyxx
  movc r1.xy, r2.zzzz, r1.xyxx, l(0,0,0,0)  // f3Refraction<0:NaN:Inf,1:NaN:Inf>
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t19.xyzw, s0  // f3RefrColor<0:Inf,1:Inf,2:Inf>
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t19.xyzw, s0  // f3ReflColor<0:Inf,1:Inf,2:Inf>
  ine r0.w, l(0, 0, 0, 0), cb5[8].w
  if_nz r0.w

#line 490
    sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t19.xyzw, s0  // fReflectionFactor<0:Inf>
    mov r3.xyz, -r2.xyzx
    add r3.xyz, r1.xyzx, r3.xyzx
    mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    add r3.xyz, r2.xyzx, r3.xyzx
    div r3.xyz, r3.xyzx, cb5[2].wwww
    mul r3.xyz, r0.wwww, r3.xyzx
    dp3 r0.w, r0.xyzx, r0.xyzx
    sqrt r0.w, r0.w
    mul r0.w, r0.w, r0.w
    mul r3.xyz, r0.wwww, r3.xyzx
    mul r0.xyz, r0.xyzx, r3.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 488
  else 

#line 495
    mov r3.xyz, -r2.xyzx
    add r1.xyz, r1.xyzx, r3.xyzx
    mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    add r1.xyz, r1.xyzx, r2.xyzx
    div r1.xyz, r1.xyzx, cb5[2].wwww
    dp3 r0.w, r0.xyzx, r0.xyzx
    sqrt r0.w, r0.w
    mul r0.w, r0.w, r0.w
    mul r1.xyz, r0.wwww, r1.xyzx
    add r0.xyz, r0.xyzx, r1.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 488
  endif 

#line 480
endif 

#line 499
min r0.w, r8.x, cb5[1].w  // fTrans<0:Inf>
mov r0.w, r0.w  // f4ColorOut<3:Inf>
mov o0.xyz, r0.xyzx  // RenderBlendedPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov o0.w, r0.w  // RenderBlendedPS<3:Inf>
ret 
// Approximately 1288 instruction slots used
